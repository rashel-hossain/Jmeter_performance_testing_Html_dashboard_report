/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 26366.0, "series": [{"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 188.0], [0.3, 196.0], [0.4, 199.0], [0.5, 203.0], [0.6, 212.0], [0.7, 223.0], [0.8, 227.0], [0.9, 228.0], [1.0, 230.0], [1.1, 232.0], [1.2, 238.0], [1.3, 238.0], [1.4, 239.0], [1.5, 240.0], [1.6, 258.0], [1.7, 269.0], [1.8, 270.0], [1.9, 283.0], [2.0, 292.0], [2.1, 308.0], [2.2, 320.0], [2.3, 332.0], [2.4, 335.0], [2.5, 338.0], [2.6, 338.0], [2.7, 339.0], [2.8, 343.0], [2.9, 358.0], [3.0, 377.0], [3.1, 384.0], [3.2, 384.0], [3.3, 425.0], [3.4, 428.0], [3.5, 429.0], [3.6, 432.0], [3.7, 434.0], [3.8, 434.0], [3.9, 434.0], [4.0, 435.0], [4.1, 440.0], [4.2, 445.0], [4.3, 446.0], [4.4, 448.0], [4.5, 459.0], [4.6, 466.0], [4.7, 506.0], [4.8, 510.0], [4.9, 514.0], [5.0, 516.0], [5.1, 519.0], [5.2, 519.0], [5.3, 521.0], [5.4, 521.0], [5.5, 526.0], [5.6, 527.0], [5.7, 530.0], [5.8, 530.0], [5.9, 531.0], [6.0, 531.0], [6.1, 533.0], [6.2, 535.0], [6.3, 538.0], [6.4, 540.0], [6.5, 540.0], [6.6, 544.0], [6.7, 545.0], [6.8, 548.0], [6.9, 550.0], [7.0, 551.0], [7.1, 558.0], [7.2, 559.0], [7.3, 561.0], [7.4, 564.0], [7.5, 565.0], [7.6, 566.0], [7.7, 566.0], [7.8, 567.0], [7.9, 568.0], [8.0, 569.0], [8.1, 569.0], [8.2, 570.0], [8.3, 572.0], [8.4, 575.0], [8.5, 577.0], [8.6, 577.0], [8.7, 577.0], [8.8, 578.0], [8.9, 578.0], [9.0, 578.0], [9.1, 580.0], [9.2, 581.0], [9.3, 582.0], [9.4, 585.0], [9.5, 586.0], [9.6, 588.0], [9.7, 589.0], [9.8, 591.0], [9.9, 591.0], [10.0, 592.0], [10.1, 593.0], [10.2, 593.0], [10.3, 593.0], [10.4, 594.0], [10.5, 594.0], [10.6, 595.0], [10.7, 597.0], [10.8, 601.0], [10.9, 602.0], [11.0, 603.0], [11.1, 604.0], [11.2, 607.0], [11.3, 608.0], [11.4, 616.0], [11.5, 619.0], [11.6, 619.0], [11.7, 619.0], [11.8, 623.0], [11.9, 624.0], [12.0, 626.0], [12.1, 627.0], [12.2, 627.0], [12.3, 633.0], [12.4, 633.0], [12.5, 634.0], [12.6, 634.0], [12.7, 636.0], [12.8, 636.0], [12.9, 636.0], [13.0, 638.0], [13.1, 642.0], [13.2, 643.0], [13.3, 646.0], [13.4, 646.0], [13.5, 651.0], [13.6, 652.0], [13.7, 654.0], [13.8, 654.0], [13.9, 655.0], [14.0, 661.0], [14.1, 661.0], [14.2, 661.0], [14.3, 663.0], [14.4, 664.0], [14.5, 665.0], [14.6, 665.0], [14.7, 665.0], [14.8, 665.0], [14.9, 666.0], [15.0, 667.0], [15.1, 667.0], [15.2, 670.0], [15.3, 671.0], [15.4, 671.0], [15.5, 682.0], [15.6, 684.0], [15.7, 686.0], [15.8, 688.0], [15.9, 690.0], [16.0, 690.0], [16.1, 696.0], [16.2, 698.0], [16.3, 701.0], [16.4, 705.0], [16.5, 706.0], [16.6, 706.0], [16.7, 706.0], [16.8, 707.0], [16.9, 708.0], [17.0, 711.0], [17.1, 711.0], [17.2, 712.0], [17.3, 720.0], [17.4, 720.0], [17.5, 726.0], [17.6, 727.0], [17.7, 727.0], [17.8, 731.0], [17.9, 732.0], [18.0, 732.0], [18.1, 733.0], [18.2, 733.0], [18.3, 735.0], [18.4, 737.0], [18.5, 742.0], [18.6, 743.0], [18.7, 744.0], [18.8, 744.0], [18.9, 749.0], [19.0, 749.0], [19.1, 750.0], [19.2, 750.0], [19.3, 750.0], [19.4, 754.0], [19.5, 755.0], [19.6, 755.0], [19.7, 755.0], [19.8, 758.0], [19.9, 759.0], [20.0, 761.0], [20.1, 763.0], [20.2, 765.0], [20.3, 765.0], [20.4, 766.0], [20.5, 767.0], [20.6, 767.0], [20.7, 768.0], [20.8, 768.0], [20.9, 770.0], [21.0, 772.0], [21.1, 772.0], [21.2, 775.0], [21.3, 778.0], [21.4, 779.0], [21.5, 781.0], [21.6, 782.0], [21.7, 783.0], [21.8, 783.0], [21.9, 785.0], [22.0, 785.0], [22.1, 788.0], [22.2, 789.0], [22.3, 790.0], [22.4, 791.0], [22.5, 796.0], [22.6, 796.0], [22.7, 796.0], [22.8, 798.0], [22.9, 812.0], [23.0, 817.0], [23.1, 817.0], [23.2, 817.0], [23.3, 820.0], [23.4, 828.0], [23.5, 832.0], [23.6, 833.0], [23.7, 836.0], [23.8, 840.0], [23.9, 849.0], [24.0, 871.0], [24.1, 871.0], [24.2, 875.0], [24.3, 876.0], [24.4, 876.0], [24.5, 877.0], [24.6, 885.0], [24.7, 898.0], [24.8, 899.0], [24.9, 901.0], [25.0, 904.0], [25.1, 907.0], [25.2, 909.0], [25.3, 917.0], [25.4, 920.0], [25.5, 922.0], [25.6, 922.0], [25.7, 922.0], [25.8, 922.0], [25.9, 923.0], [26.0, 928.0], [26.1, 930.0], [26.2, 935.0], [26.3, 935.0], [26.4, 938.0], [26.5, 938.0], [26.6, 940.0], [26.7, 947.0], [26.8, 953.0], [26.9, 954.0], [27.0, 954.0], [27.1, 958.0], [27.2, 958.0], [27.3, 959.0], [27.4, 961.0], [27.5, 961.0], [27.6, 964.0], [27.7, 967.0], [27.8, 968.0], [27.9, 969.0], [28.0, 970.0], [28.1, 973.0], [28.2, 973.0], [28.3, 973.0], [28.4, 975.0], [28.5, 979.0], [28.6, 980.0], [28.7, 980.0], [28.8, 983.0], [28.9, 984.0], [29.0, 985.0], [29.1, 987.0], [29.2, 988.0], [29.3, 989.0], [29.4, 989.0], [29.5, 989.0], [29.6, 990.0], [29.7, 993.0], [29.8, 996.0], [29.9, 999.0], [30.0, 999.0], [30.1, 1004.0], [30.2, 1006.0], [30.3, 1007.0], [30.4, 1008.0], [30.5, 1010.0], [30.6, 1012.0], [30.7, 1016.0], [30.8, 1016.0], [30.9, 1019.0], [31.0, 1021.0], [31.1, 1024.0], [31.2, 1024.0], [31.3, 1027.0], [31.4, 1031.0], [31.5, 1031.0], [31.6, 1032.0], [31.7, 1032.0], [31.8, 1032.0], [31.9, 1034.0], [32.0, 1034.0], [32.1, 1034.0], [32.2, 1041.0], [32.3, 1044.0], [32.4, 1046.0], [32.5, 1047.0], [32.6, 1048.0], [32.7, 1049.0], [32.8, 1049.0], [32.9, 1050.0], [33.0, 1051.0], [33.1, 1051.0], [33.2, 1055.0], [33.3, 1056.0], [33.4, 1056.0], [33.5, 1059.0], [33.6, 1060.0], [33.7, 1064.0], [33.8, 1065.0], [33.9, 1067.0], [34.0, 1069.0], [34.1, 1069.0], [34.2, 1071.0], [34.3, 1073.0], [34.4, 1077.0], [34.5, 1077.0], [34.6, 1079.0], [34.7, 1079.0], [34.8, 1079.0], [34.9, 1081.0], [35.0, 1081.0], [35.1, 1082.0], [35.2, 1082.0], [35.3, 1083.0], [35.4, 1083.0], [35.5, 1083.0], [35.6, 1085.0], [35.7, 1086.0], [35.8, 1087.0], [35.9, 1087.0], [36.0, 1087.0], [36.1, 1090.0], [36.2, 1091.0], [36.3, 1092.0], [36.4, 1093.0], [36.5, 1094.0], [36.6, 1094.0], [36.7, 1095.0], [36.8, 1096.0], [36.9, 1100.0], [37.0, 1100.0], [37.1, 1100.0], [37.2, 1100.0], [37.3, 1101.0], [37.4, 1105.0], [37.5, 1105.0], [37.6, 1108.0], [37.7, 1109.0], [37.8, 1109.0], [37.9, 1109.0], [38.0, 1110.0], [38.1, 1115.0], [38.2, 1116.0], [38.3, 1117.0], [38.4, 1117.0], [38.5, 1117.0], [38.6, 1118.0], [38.7, 1119.0], [38.8, 1120.0], [38.9, 1123.0], [39.0, 1126.0], [39.1, 1128.0], [39.2, 1129.0], [39.3, 1132.0], [39.4, 1136.0], [39.5, 1136.0], [39.6, 1136.0], [39.7, 1137.0], [39.8, 1137.0], [39.9, 1140.0], [40.0, 1141.0], [40.1, 1144.0], [40.2, 1145.0], [40.3, 1147.0], [40.4, 1151.0], [40.5, 1158.0], [40.6, 1160.0], [40.7, 1166.0], [40.8, 1169.0], [40.9, 1170.0], [41.0, 1173.0], [41.1, 1173.0], [41.2, 1174.0], [41.3, 1178.0], [41.4, 1183.0], [41.5, 1189.0], [41.6, 1192.0], [41.7, 1192.0], [41.8, 1198.0], [41.9, 1206.0], [42.0, 1215.0], [42.1, 1218.0], [42.2, 1235.0], [42.3, 1238.0], [42.4, 1238.0], [42.5, 1240.0], [42.6, 1240.0], [42.7, 1247.0], [42.8, 1249.0], [42.9, 1250.0], [43.0, 1254.0], [43.1, 1259.0], [43.2, 1267.0], [43.3, 1268.0], [43.4, 1269.0], [43.5, 1270.0], [43.6, 1270.0], [43.7, 1281.0], [43.8, 1282.0], [43.9, 1283.0], [44.0, 1287.0], [44.1, 1287.0], [44.2, 1287.0], [44.3, 1292.0], [44.4, 1293.0], [44.5, 1293.0], [44.6, 1294.0], [44.7, 1295.0], [44.8, 1297.0], [44.9, 1297.0], [45.0, 1300.0], [45.1, 1305.0], [45.2, 1307.0], [45.3, 1309.0], [45.4, 1310.0], [45.5, 1318.0], [45.6, 1321.0], [45.7, 1327.0], [45.8, 1327.0], [45.9, 1339.0], [46.0, 1339.0], [46.1, 1345.0], [46.2, 1345.0], [46.3, 1353.0], [46.4, 1359.0], [46.5, 1360.0], [46.6, 1361.0], [46.7, 1362.0], [46.8, 1363.0], [46.9, 1371.0], [47.0, 1371.0], [47.1, 1376.0], [47.2, 1376.0], [47.3, 1385.0], [47.4, 1387.0], [47.5, 1387.0], [47.6, 1388.0], [47.7, 1395.0], [47.8, 1397.0], [47.9, 1403.0], [48.0, 1406.0], [48.1, 1409.0], [48.2, 1420.0], [48.3, 1432.0], [48.4, 1432.0], [48.5, 1433.0], [48.6, 1436.0], [48.7, 1438.0], [48.8, 1438.0], [48.9, 1440.0], [49.0, 1445.0], [49.1, 1448.0], [49.2, 1453.0], [49.3, 1463.0], [49.4, 1470.0], [49.5, 1472.0], [49.6, 1480.0], [49.7, 1482.0], [49.8, 1483.0], [49.9, 1486.0], [50.0, 1487.0], [50.1, 1487.0], [50.2, 1492.0], [50.3, 1507.0], [50.4, 1510.0], [50.5, 1512.0], [50.6, 1513.0], [50.7, 1514.0], [50.8, 1518.0], [50.9, 1518.0], [51.0, 1522.0], [51.1, 1526.0], [51.2, 1534.0], [51.3, 1534.0], [51.4, 1540.0], [51.5, 1542.0], [51.6, 1545.0], [51.7, 1548.0], [51.8, 1549.0], [51.9, 1555.0], [52.0, 1564.0], [52.1, 1567.0], [52.2, 1574.0], [52.3, 1575.0], [52.4, 1581.0], [52.5, 1582.0], [52.6, 1582.0], [52.7, 1585.0], [52.8, 1585.0], [52.9, 1587.0], [53.0, 1594.0], [53.1, 1594.0], [53.2, 1603.0], [53.3, 1609.0], [53.4, 1621.0], [53.5, 1625.0], [53.6, 1639.0], [53.7, 1662.0], [53.8, 1670.0], [53.9, 1670.0], [54.0, 1684.0], [54.1, 1687.0], [54.2, 1696.0], [54.3, 1698.0], [54.4, 1702.0], [54.5, 1703.0], [54.6, 1709.0], [54.7, 1720.0], [54.8, 1721.0], [54.9, 1721.0], [55.0, 1724.0], [55.1, 1730.0], [55.2, 1730.0], [55.3, 1732.0], [55.4, 1737.0], [55.5, 1741.0], [55.6, 1741.0], [55.7, 1742.0], [55.8, 1746.0], [55.9, 1749.0], [56.0, 1752.0], [56.1, 1759.0], [56.2, 1761.0], [56.3, 1776.0], [56.4, 1777.0], [56.5, 1777.0], [56.6, 1780.0], [56.7, 1783.0], [56.8, 1787.0], [56.9, 1805.0], [57.0, 1805.0], [57.1, 1808.0], [57.2, 1817.0], [57.3, 1824.0], [57.4, 1827.0], [57.5, 1832.0], [57.6, 1833.0], [57.7, 1833.0], [57.8, 1835.0], [57.9, 1839.0], [58.0, 1845.0], [58.1, 1849.0], [58.2, 1854.0], [58.3, 1878.0], [58.4, 1882.0], [58.5, 1884.0], [58.6, 1890.0], [58.7, 1894.0], [58.8, 1915.0], [58.9, 1916.0], [59.0, 1916.0], [59.1, 1929.0], [59.2, 1931.0], [59.3, 1945.0], [59.4, 1947.0], [59.5, 1949.0], [59.6, 1949.0], [59.7, 1953.0], [59.8, 1956.0], [59.9, 1962.0], [60.0, 1974.0], [60.1, 1982.0], [60.2, 1996.0], [60.3, 1996.0], [60.4, 1999.0], [60.5, 2003.0], [60.6, 2004.0], [60.7, 2004.0], [60.8, 2005.0], [60.9, 2006.0], [61.0, 2010.0], [61.1, 2011.0], [61.2, 2036.0], [61.3, 2040.0], [61.4, 2047.0], [61.5, 2051.0], [61.6, 2051.0], [61.7, 2057.0], [61.8, 2057.0], [61.9, 2064.0], [62.0, 2067.0], [62.1, 2088.0], [62.2, 2096.0], [62.3, 2099.0], [62.4, 2102.0], [62.5, 2106.0], [62.6, 2110.0], [62.7, 2115.0], [62.8, 2128.0], [62.9, 2128.0], [63.0, 2129.0], [63.1, 2136.0], [63.2, 2136.0], [63.3, 2145.0], [63.4, 2157.0], [63.5, 2162.0], [63.6, 2168.0], [63.7, 2177.0], [63.8, 2179.0], [63.9, 2184.0], [64.0, 2193.0], [64.1, 2194.0], [64.2, 2194.0], [64.3, 2197.0], [64.4, 2203.0], [64.5, 2214.0], [64.6, 2220.0], [64.7, 2221.0], [64.8, 2222.0], [64.9, 2226.0], [65.0, 2229.0], [65.1, 2231.0], [65.2, 2234.0], [65.3, 2244.0], [65.4, 2244.0], [65.5, 2254.0], [65.6, 2257.0], [65.7, 2261.0], [65.8, 2272.0], [65.9, 2276.0], [66.0, 2280.0], [66.1, 2283.0], [66.2, 2290.0], [66.3, 2294.0], [66.4, 2310.0], [66.5, 2311.0], [66.6, 2316.0], [66.7, 2316.0], [66.8, 2318.0], [66.9, 2318.0], [67.0, 2322.0], [67.1, 2328.0], [67.2, 2332.0], [67.3, 2333.0], [67.4, 2337.0], [67.5, 2353.0], [67.6, 2355.0], [67.7, 2358.0], [67.8, 2362.0], [67.9, 2363.0], [68.0, 2363.0], [68.1, 2379.0], [68.2, 2385.0], [68.3, 2386.0], [68.4, 2386.0], [68.5, 2391.0], [68.6, 2392.0], [68.7, 2397.0], [68.8, 2400.0], [68.9, 2402.0], [69.0, 2404.0], [69.1, 2406.0], [69.2, 2414.0], [69.3, 2414.0], [69.4, 2421.0], [69.5, 2423.0], [69.6, 2424.0], [69.7, 2425.0], [69.8, 2427.0], [69.9, 2428.0], [70.0, 2434.0], [70.1, 2444.0], [70.2, 2460.0], [70.3, 2464.0], [70.4, 2469.0], [70.5, 2492.0], [70.6, 2492.0], [70.7, 2494.0], [70.8, 2497.0], [70.9, 2500.0], [71.0, 2507.0], [71.1, 2511.0], [71.2, 2513.0], [71.3, 2521.0], [71.4, 2524.0], [71.5, 2534.0], [71.6, 2539.0], [71.7, 2539.0], [71.8, 2539.0], [71.9, 2542.0], [72.0, 2548.0], [72.1, 2552.0], [72.2, 2560.0], [72.3, 2560.0], [72.4, 2585.0], [72.5, 2587.0], [72.6, 2587.0], [72.7, 2596.0], [72.8, 2602.0], [72.9, 2616.0], [73.0, 2619.0], [73.1, 2619.0], [73.2, 2628.0], [73.3, 2628.0], [73.4, 2635.0], [73.5, 2635.0], [73.6, 2642.0], [73.7, 2646.0], [73.8, 2652.0], [73.9, 2661.0], [74.0, 2667.0], [74.1, 2669.0], [74.2, 2669.0], [74.3, 2671.0], [74.4, 2671.0], [74.5, 2681.0], [74.6, 2685.0], [74.7, 2697.0], [74.8, 2697.0], [74.9, 2704.0], [75.0, 2707.0], [75.1, 2713.0], [75.2, 2717.0], [75.3, 2718.0], [75.4, 2724.0], [75.5, 2724.0], [75.6, 2741.0], [75.7, 2741.0], [75.8, 2746.0], [75.9, 2750.0], [76.0, 2750.0], [76.1, 2752.0], [76.2, 2754.0], [76.3, 2757.0], [76.4, 2760.0], [76.5, 2760.0], [76.6, 2763.0], [76.7, 2777.0], [76.8, 2800.0], [76.9, 2808.0], [77.0, 2808.0], [77.1, 2814.0], [77.2, 2814.0], [77.3, 2817.0], [77.4, 2821.0], [77.5, 2823.0], [77.6, 2827.0], [77.7, 2836.0], [77.8, 2848.0], [77.9, 2858.0], [78.0, 2858.0], [78.1, 2859.0], [78.2, 2860.0], [78.3, 2860.0], [78.4, 2865.0], [78.5, 2867.0], [78.6, 2869.0], [78.7, 2882.0], [78.8, 2883.0], [78.9, 2885.0], [79.0, 2885.0], [79.1, 2892.0], [79.2, 2906.0], [79.3, 2907.0], [79.4, 2913.0], [79.5, 2913.0], [79.6, 2918.0], [79.7, 2923.0], [79.8, 2927.0], [79.9, 2933.0], [80.0, 2952.0], [80.1, 2952.0], [80.2, 2952.0], [80.3, 2956.0], [80.4, 2973.0], [80.5, 3001.0], [80.6, 3002.0], [80.7, 3003.0], [80.8, 3003.0], [80.9, 3006.0], [81.0, 3010.0], [81.1, 3033.0], [81.2, 3039.0], [81.3, 3039.0], [81.4, 3074.0], [81.5, 3134.0], [81.6, 3134.0], [81.7, 3138.0], [81.8, 3142.0], [81.9, 3159.0], [82.0, 3161.0], [82.1, 3161.0], [82.2, 3176.0], [82.3, 3182.0], [82.4, 3182.0], [82.5, 3207.0], [82.6, 3210.0], [82.7, 3211.0], [82.8, 3218.0], [82.9, 3221.0], [83.0, 3225.0], [83.1, 3232.0], [83.2, 3234.0], [83.3, 3256.0], [83.4, 3256.0], [83.5, 3256.0], [83.6, 3258.0], [83.7, 3264.0], [83.8, 3267.0], [83.9, 3268.0], [84.0, 3270.0], [84.1, 3274.0], [84.2, 3294.0], [84.3, 3302.0], [84.4, 3311.0], [84.5, 3328.0], [84.6, 3330.0], [84.7, 3330.0], [84.8, 3347.0], [84.9, 3351.0], [85.0, 3357.0], [85.1, 3361.0], [85.2, 3371.0], [85.3, 3376.0], [85.4, 3387.0], [85.5, 3396.0], [85.6, 3420.0], [85.7, 3423.0], [85.8, 3430.0], [85.9, 3430.0], [86.0, 3430.0], [86.1, 3432.0], [86.2, 3447.0], [86.3, 3461.0], [86.4, 3463.0], [86.5, 3465.0], [86.6, 3473.0], [86.7, 3494.0], [86.8, 3504.0], [86.9, 3514.0], [87.0, 3516.0], [87.1, 3540.0], [87.2, 3540.0], [87.3, 3545.0], [87.4, 3556.0], [87.5, 3565.0], [87.6, 3567.0], [87.7, 3573.0], [87.8, 3573.0], [87.9, 3580.0], [88.0, 3609.0], [88.1, 3626.0], [88.2, 3639.0], [88.3, 3644.0], [88.4, 3660.0], [88.5, 3660.0], [88.6, 3667.0], [88.7, 3677.0], [88.8, 3707.0], [88.9, 3714.0], [89.0, 3735.0], [89.1, 3781.0], [89.2, 3854.0], [89.3, 3860.0], [89.4, 3912.0], [89.5, 3936.0], [89.6, 3952.0], [89.7, 3952.0], [89.8, 3952.0], [89.9, 3969.0], [90.0, 3988.0], [90.1, 4002.0], [90.2, 4010.0], [90.3, 4016.0], [90.4, 4026.0], [90.5, 4026.0], [90.6, 4048.0], [90.7, 4074.0], [90.8, 4092.0], [90.9, 4135.0], [91.0, 4147.0], [91.1, 4147.0], [91.2, 4150.0], [91.3, 4207.0], [91.4, 4212.0], [91.5, 4225.0], [91.6, 4253.0], [91.7, 4260.0], [91.8, 4267.0], [91.9, 4293.0], [92.0, 4314.0], [92.1, 4336.0], [92.2, 4336.0], [92.3, 4353.0], [92.4, 4353.0], [92.5, 4354.0], [92.6, 4383.0], [92.7, 4391.0], [92.8, 4408.0], [92.9, 4413.0], [93.0, 4435.0], [93.1, 4462.0], [93.2, 4497.0], [93.3, 4498.0], [93.4, 4501.0], [93.5, 4517.0], [93.6, 4517.0], [93.7, 4518.0], [93.8, 4538.0], [93.9, 4561.0], [94.0, 4580.0], [94.1, 4713.0], [94.2, 4751.0], [94.3, 4793.0], [94.4, 4822.0], [94.5, 4834.0], [94.6, 4902.0], [94.7, 4936.0], [94.8, 4948.0], [94.9, 4948.0], [95.0, 4988.0], [95.1, 5022.0], [95.2, 5035.0], [95.3, 5080.0], [95.4, 5085.0], [95.5, 5098.0], [95.6, 5109.0], [95.7, 5129.0], [95.8, 5139.0], [95.9, 5219.0], [96.0, 5309.0], [96.1, 5336.0], [96.2, 5336.0], [96.3, 5373.0], [96.4, 5386.0], [96.5, 5397.0], [96.6, 5558.0], [96.7, 5650.0], [96.8, 5816.0], [96.9, 5825.0], [97.0, 5890.0], [97.1, 5913.0], [97.2, 6043.0], [97.3, 6076.0], [97.4, 6650.0], [97.5, 6650.0], [97.6, 6710.0], [97.7, 7027.0], [97.8, 7082.0], [97.9, 7151.0], [98.0, 7405.0], [98.1, 7697.0], [98.2, 7793.0], [98.3, 7951.0], [98.4, 8661.0], [98.5, 8673.0], [98.6, 8785.0], [98.7, 8893.0], [98.8, 8893.0], [98.9, 8921.0], [99.0, 9104.0], [99.1, 9167.0], [99.2, 9254.0], [99.3, 9342.0], [99.4, 11103.0], [99.5, 12109.0], [99.6, 12165.0], [99.7, 15109.0], [99.8, 15151.0], [99.9, 16024.0], [100.0, 16024.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 448.0], [0.1, 448.0], [0.2, 484.0], [0.3, 513.0], [0.4, 515.0], [0.5, 526.0], [0.6, 530.0], [0.7, 531.0], [0.8, 539.0], [0.9, 557.0], [1.0, 565.0], [1.1, 572.0], [1.2, 578.0], [1.3, 578.0], [1.4, 590.0], [1.5, 602.0], [1.6, 604.0], [1.7, 614.0], [1.8, 615.0], [1.9, 624.0], [2.0, 672.0], [2.1, 681.0], [2.2, 682.0], [2.3, 684.0], [2.4, 699.0], [2.5, 712.0], [2.6, 712.0], [2.7, 718.0], [2.8, 726.0], [2.9, 732.0], [3.0, 755.0], [3.1, 769.0], [3.2, 770.0], [3.3, 773.0], [3.4, 778.0], [3.5, 811.0], [3.6, 829.0], [3.7, 847.0], [3.8, 847.0], [3.9, 847.0], [4.0, 851.0], [4.1, 852.0], [4.2, 854.0], [4.3, 864.0], [4.4, 867.0], [4.5, 891.0], [4.6, 894.0], [4.7, 925.0], [4.8, 965.0], [4.9, 984.0], [5.0, 985.0], [5.1, 987.0], [5.2, 987.0], [5.3, 1002.0], [5.4, 1044.0], [5.5, 1055.0], [5.6, 1063.0], [5.7, 1089.0], [5.8, 1099.0], [5.9, 1112.0], [6.0, 1117.0], [6.1, 1144.0], [6.2, 1154.0], [6.3, 1165.0], [6.4, 1169.0], [6.5, 1169.0], [6.6, 1179.0], [6.7, 1181.0], [6.8, 1181.0], [6.9, 1189.0], [7.0, 1190.0], [7.1, 1193.0], [7.2, 1193.0], [7.3, 1198.0], [7.4, 1205.0], [7.5, 1209.0], [7.6, 1214.0], [7.7, 1214.0], [7.8, 1214.0], [7.9, 1220.0], [8.0, 1223.0], [8.1, 1228.0], [8.2, 1229.0], [8.3, 1230.0], [8.4, 1232.0], [8.5, 1232.0], [8.6, 1235.0], [8.7, 1245.0], [8.8, 1245.0], [8.9, 1249.0], [9.0, 1249.0], [9.1, 1250.0], [9.2, 1255.0], [9.3, 1259.0], [9.4, 1260.0], [9.5, 1260.0], [9.6, 1269.0], [9.7, 1272.0], [9.8, 1275.0], [9.9, 1276.0], [10.0, 1281.0], [10.1, 1288.0], [10.2, 1288.0], [10.3, 1288.0], [10.4, 1292.0], [10.5, 1293.0], [10.6, 1296.0], [10.7, 1296.0], [10.8, 1300.0], [10.9, 1301.0], [11.0, 1302.0], [11.1, 1302.0], [11.2, 1302.0], [11.3, 1305.0], [11.4, 1309.0], [11.5, 1310.0], [11.6, 1310.0], [11.7, 1314.0], [11.8, 1315.0], [11.9, 1323.0], [12.0, 1324.0], [12.1, 1326.0], [12.2, 1327.0], [12.3, 1328.0], [12.4, 1329.0], [12.5, 1330.0], [12.6, 1338.0], [12.7, 1339.0], [12.8, 1339.0], [12.9, 1339.0], [13.0, 1343.0], [13.1, 1344.0], [13.2, 1344.0], [13.3, 1345.0], [13.4, 1345.0], [13.5, 1348.0], [13.6, 1349.0], [13.7, 1350.0], [13.8, 1353.0], [13.9, 1353.0], [14.0, 1360.0], [14.1, 1362.0], [14.2, 1362.0], [14.3, 1363.0], [14.4, 1365.0], [14.5, 1367.0], [14.6, 1367.0], [14.7, 1368.0], [14.8, 1374.0], [14.9, 1380.0], [15.0, 1381.0], [15.1, 1384.0], [15.2, 1387.0], [15.3, 1389.0], [15.4, 1389.0], [15.5, 1391.0], [15.6, 1398.0], [15.7, 1398.0], [15.8, 1403.0], [15.9, 1409.0], [16.0, 1410.0], [16.1, 1411.0], [16.2, 1412.0], [16.3, 1412.0], [16.4, 1414.0], [16.5, 1414.0], [16.6, 1417.0], [16.7, 1417.0], [16.8, 1418.0], [16.9, 1419.0], [17.0, 1420.0], [17.1, 1421.0], [17.2, 1421.0], [17.3, 1422.0], [17.4, 1422.0], [17.5, 1425.0], [17.6, 1426.0], [17.7, 1429.0], [17.8, 1429.0], [17.9, 1432.0], [18.0, 1432.0], [18.1, 1434.0], [18.2, 1435.0], [18.3, 1435.0], [18.4, 1436.0], [18.5, 1436.0], [18.6, 1436.0], [18.7, 1437.0], [18.8, 1437.0], [18.9, 1438.0], [19.0, 1438.0], [19.1, 1441.0], [19.2, 1441.0], [19.3, 1441.0], [19.4, 1442.0], [19.5, 1442.0], [19.6, 1443.0], [19.7, 1448.0], [19.8, 1451.0], [19.9, 1452.0], [20.0, 1455.0], [20.1, 1456.0], [20.2, 1457.0], [20.3, 1457.0], [20.4, 1458.0], [20.5, 1458.0], [20.6, 1458.0], [20.7, 1459.0], [20.8, 1459.0], [20.9, 1459.0], [21.0, 1459.0], [21.1, 1460.0], [21.2, 1461.0], [21.3, 1462.0], [21.4, 1463.0], [21.5, 1463.0], [21.6, 1468.0], [21.7, 1469.0], [21.8, 1469.0], [21.9, 1469.0], [22.0, 1470.0], [22.1, 1471.0], [22.2, 1472.0], [22.3, 1472.0], [22.4, 1478.0], [22.5, 1478.0], [22.6, 1481.0], [22.7, 1483.0], [22.8, 1484.0], [22.9, 1485.0], [23.0, 1486.0], [23.1, 1486.0], [23.2, 1490.0], [23.3, 1493.0], [23.4, 1496.0], [23.5, 1496.0], [23.6, 1498.0], [23.7, 1498.0], [23.8, 1508.0], [23.9, 1510.0], [24.0, 1520.0], [24.1, 1522.0], [24.2, 1525.0], [24.3, 1526.0], [24.4, 1526.0], [24.5, 1526.0], [24.6, 1527.0], [24.7, 1527.0], [24.8, 1528.0], [24.9, 1528.0], [25.0, 1532.0], [25.1, 1534.0], [25.2, 1536.0], [25.3, 1539.0], [25.4, 1540.0], [25.5, 1542.0], [25.6, 1542.0], [25.7, 1542.0], [25.8, 1544.0], [25.9, 1544.0], [26.0, 1547.0], [26.1, 1552.0], [26.2, 1555.0], [26.3, 1555.0], [26.4, 1556.0], [26.5, 1557.0], [26.6, 1560.0], [26.7, 1564.0], [26.8, 1569.0], [26.9, 1570.0], [27.0, 1570.0], [27.1, 1571.0], [27.2, 1572.0], [27.3, 1576.0], [27.4, 1578.0], [27.5, 1578.0], [27.6, 1583.0], [27.7, 1583.0], [27.8, 1583.0], [27.9, 1585.0], [28.0, 1585.0], [28.1, 1589.0], [28.2, 1593.0], [28.3, 1593.0], [28.4, 1596.0], [28.5, 1596.0], [28.6, 1597.0], [28.7, 1599.0], [28.8, 1602.0], [28.9, 1602.0], [29.0, 1603.0], [29.1, 1603.0], [29.2, 1604.0], [29.3, 1605.0], [29.4, 1607.0], [29.5, 1607.0], [29.6, 1608.0], [29.7, 1611.0], [29.8, 1612.0], [29.9, 1614.0], [30.0, 1615.0], [30.1, 1616.0], [30.2, 1623.0], [30.3, 1623.0], [30.4, 1623.0], [30.5, 1629.0], [30.6, 1631.0], [30.7, 1633.0], [30.8, 1633.0], [30.9, 1634.0], [31.0, 1635.0], [31.1, 1635.0], [31.2, 1640.0], [31.3, 1642.0], [31.4, 1649.0], [31.5, 1653.0], [31.6, 1654.0], [31.7, 1660.0], [31.8, 1664.0], [31.9, 1669.0], [32.0, 1671.0], [32.1, 1671.0], [32.2, 1671.0], [32.3, 1672.0], [32.4, 1676.0], [32.5, 1676.0], [32.6, 1682.0], [32.7, 1684.0], [32.8, 1690.0], [32.9, 1693.0], [33.0, 1694.0], [33.1, 1695.0], [33.2, 1702.0], [33.3, 1706.0], [33.4, 1706.0], [33.5, 1706.0], [33.6, 1707.0], [33.7, 1709.0], [33.8, 1709.0], [33.9, 1712.0], [34.0, 1717.0], [34.1, 1722.0], [34.2, 1728.0], [34.3, 1729.0], [34.4, 1730.0], [34.5, 1743.0], [34.6, 1747.0], [34.7, 1747.0], [34.8, 1762.0], [34.9, 1764.0], [35.0, 1770.0], [35.1, 1771.0], [35.2, 1772.0], [35.3, 1772.0], [35.4, 1774.0], [35.5, 1774.0], [35.6, 1778.0], [35.7, 1790.0], [35.8, 1793.0], [35.9, 1793.0], [36.0, 1807.0], [36.1, 1811.0], [36.2, 1814.0], [36.3, 1814.0], [36.4, 1817.0], [36.5, 1824.0], [36.6, 1827.0], [36.7, 1828.0], [36.8, 1829.0], [36.9, 1830.0], [37.0, 1848.0], [37.1, 1851.0], [37.2, 1851.0], [37.3, 1860.0], [37.4, 1862.0], [37.5, 1865.0], [37.6, 1868.0], [37.7, 1870.0], [37.8, 1872.0], [37.9, 1875.0], [38.0, 1883.0], [38.1, 1890.0], [38.2, 1893.0], [38.3, 1896.0], [38.4, 1897.0], [38.5, 1897.0], [38.6, 1911.0], [38.7, 1913.0], [38.8, 1913.0], [38.9, 1915.0], [39.0, 1918.0], [39.1, 1927.0], [39.2, 1928.0], [39.3, 1931.0], [39.4, 1934.0], [39.5, 1940.0], [39.6, 1952.0], [39.7, 1954.0], [39.8, 1954.0], [39.9, 1955.0], [40.0, 1961.0], [40.1, 1965.0], [40.2, 1969.0], [40.3, 1971.0], [40.4, 1986.0], [40.5, 1988.0], [40.6, 1998.0], [40.7, 2002.0], [40.8, 2015.0], [40.9, 2024.0], [41.0, 2025.0], [41.1, 2025.0], [41.2, 2045.0], [41.3, 2046.0], [41.4, 2062.0], [41.5, 2066.0], [41.6, 2078.0], [41.7, 2079.0], [41.8, 2087.0], [41.9, 2092.0], [42.0, 2094.0], [42.1, 2103.0], [42.2, 2114.0], [42.3, 2122.0], [42.4, 2122.0], [42.5, 2132.0], [42.6, 2149.0], [42.7, 2152.0], [42.8, 2154.0], [42.9, 2175.0], [43.0, 2178.0], [43.1, 2185.0], [43.2, 2196.0], [43.3, 2197.0], [43.4, 2218.0], [43.5, 2219.0], [43.6, 2219.0], [43.7, 2221.0], [43.8, 2222.0], [43.9, 2224.0], [44.0, 2225.0], [44.1, 2233.0], [44.2, 2253.0], [44.3, 2256.0], [44.4, 2266.0], [44.5, 2269.0], [44.6, 2276.0], [44.7, 2289.0], [44.8, 2300.0], [44.9, 2300.0], [45.0, 2307.0], [45.1, 2327.0], [45.2, 2328.0], [45.3, 2336.0], [45.4, 2338.0], [45.5, 2341.0], [45.6, 2352.0], [45.7, 2353.0], [45.8, 2355.0], [45.9, 2364.0], [46.0, 2368.0], [46.1, 2375.0], [46.2, 2375.0], [46.3, 2377.0], [46.4, 2377.0], [46.5, 2380.0], [46.6, 2381.0], [46.7, 2382.0], [46.8, 2395.0], [46.9, 2398.0], [47.0, 2400.0], [47.1, 2400.0], [47.2, 2401.0], [47.3, 2403.0], [47.4, 2404.0], [47.5, 2404.0], [47.6, 2407.0], [47.7, 2417.0], [47.8, 2418.0], [47.9, 2418.0], [48.0, 2430.0], [48.1, 2432.0], [48.2, 2445.0], [48.3, 2452.0], [48.4, 2454.0], [48.5, 2467.0], [48.6, 2469.0], [48.7, 2480.0], [48.8, 2480.0], [48.9, 2482.0], [49.0, 2488.0], [49.1, 2490.0], [49.2, 2492.0], [49.3, 2499.0], [49.4, 2500.0], [49.5, 2503.0], [49.6, 2505.0], [49.7, 2508.0], [49.8, 2514.0], [49.9, 2518.0], [50.0, 2533.0], [50.1, 2533.0], [50.2, 2535.0], [50.3, 2542.0], [50.4, 2544.0], [50.5, 2547.0], [50.6, 2550.0], [50.7, 2556.0], [50.8, 2564.0], [50.9, 2568.0], [51.0, 2572.0], [51.1, 2574.0], [51.2, 2577.0], [51.3, 2577.0], [51.4, 2584.0], [51.5, 2584.0], [51.6, 2587.0], [51.7, 2590.0], [51.8, 2593.0], [51.9, 2598.0], [52.0, 2600.0], [52.1, 2603.0], [52.2, 2631.0], [52.3, 2634.0], [52.4, 2640.0], [52.5, 2646.0], [52.6, 2646.0], [52.7, 2648.0], [52.8, 2651.0], [52.9, 2651.0], [53.0, 2653.0], [53.1, 2666.0], [53.2, 2666.0], [53.3, 2673.0], [53.4, 2693.0], [53.5, 2693.0], [53.6, 2700.0], [53.7, 2701.0], [53.8, 2702.0], [53.9, 2702.0], [54.0, 2714.0], [54.1, 2717.0], [54.2, 2719.0], [54.3, 2733.0], [54.4, 2734.0], [54.5, 2734.0], [54.6, 2734.0], [54.7, 2743.0], [54.8, 2748.0], [54.9, 2748.0], [55.0, 2750.0], [55.1, 2758.0], [55.2, 2758.0], [55.3, 2768.0], [55.4, 2773.0], [55.5, 2775.0], [55.6, 2779.0], [55.7, 2788.0], [55.8, 2794.0], [55.9, 2799.0], [56.0, 2801.0], [56.1, 2807.0], [56.2, 2808.0], [56.3, 2817.0], [56.4, 2823.0], [56.5, 2823.0], [56.6, 2830.0], [56.7, 2846.0], [56.8, 2851.0], [56.9, 2857.0], [57.0, 2875.0], [57.1, 2875.0], [57.2, 2886.0], [57.3, 2891.0], [57.4, 2894.0], [57.5, 2895.0], [57.6, 2908.0], [57.7, 2908.0], [57.8, 2910.0], [57.9, 2911.0], [58.0, 2911.0], [58.1, 2911.0], [58.2, 2913.0], [58.3, 2919.0], [58.4, 2921.0], [58.5, 2924.0], [58.6, 2951.0], [58.7, 2964.0], [58.8, 2964.0], [58.9, 2982.0], [59.0, 2982.0], [59.1, 2986.0], [59.2, 2992.0], [59.3, 3001.0], [59.4, 3045.0], [59.5, 3049.0], [59.6, 3049.0], [59.7, 3051.0], [59.8, 3089.0], [59.9, 3095.0], [60.0, 3095.0], [60.1, 3099.0], [60.2, 3116.0], [60.3, 3116.0], [60.4, 3120.0], [60.5, 3139.0], [60.6, 3154.0], [60.7, 3154.0], [60.8, 3165.0], [60.9, 3179.0], [61.0, 3179.0], [61.1, 3186.0], [61.2, 3193.0], [61.3, 3194.0], [61.4, 3197.0], [61.5, 3198.0], [61.6, 3198.0], [61.7, 3205.0], [61.8, 3207.0], [61.9, 3213.0], [62.0, 3230.0], [62.1, 3232.0], [62.2, 3242.0], [62.3, 3242.0], [62.4, 3257.0], [62.5, 3259.0], [62.6, 3266.0], [62.7, 3267.0], [62.8, 3268.0], [62.9, 3268.0], [63.0, 3268.0], [63.1, 3273.0], [63.2, 3273.0], [63.3, 3280.0], [63.4, 3281.0], [63.5, 3284.0], [63.6, 3288.0], [63.7, 3290.0], [63.8, 3292.0], [63.9, 3296.0], [64.0, 3299.0], [64.1, 3302.0], [64.2, 3302.0], [64.3, 3304.0], [64.4, 3306.0], [64.5, 3306.0], [64.6, 3310.0], [64.7, 3313.0], [64.8, 3318.0], [64.9, 3319.0], [65.0, 3320.0], [65.1, 3321.0], [65.2, 3324.0], [65.3, 3335.0], [65.4, 3335.0], [65.5, 3335.0], [65.6, 3340.0], [65.7, 3346.0], [65.8, 3348.0], [65.9, 3349.0], [66.0, 3354.0], [66.1, 3362.0], [66.2, 3368.0], [66.3, 3378.0], [66.4, 3385.0], [66.5, 3388.0], [66.6, 3415.0], [66.7, 3415.0], [66.8, 3415.0], [66.9, 3415.0], [67.0, 3418.0], [67.1, 3418.0], [67.2, 3423.0], [67.3, 3423.0], [67.4, 3429.0], [67.5, 3440.0], [67.6, 3444.0], [67.7, 3445.0], [67.8, 3455.0], [67.9, 3455.0], [68.0, 3455.0], [68.1, 3465.0], [68.2, 3471.0], [68.3, 3479.0], [68.4, 3484.0], [68.5, 3492.0], [68.6, 3503.0], [68.7, 3504.0], [68.8, 3505.0], [68.9, 3513.0], [69.0, 3518.0], [69.1, 3524.0], [69.2, 3526.0], [69.3, 3526.0], [69.4, 3527.0], [69.5, 3528.0], [69.6, 3530.0], [69.7, 3533.0], [69.8, 3535.0], [69.9, 3536.0], [70.0, 3540.0], [70.1, 3541.0], [70.2, 3551.0], [70.3, 3552.0], [70.4, 3572.0], [70.5, 3572.0], [70.6, 3572.0], [70.7, 3575.0], [70.8, 3578.0], [70.9, 3594.0], [71.0, 3596.0], [71.1, 3609.0], [71.2, 3622.0], [71.3, 3626.0], [71.4, 3628.0], [71.5, 3631.0], [71.6, 3642.0], [71.7, 3647.0], [71.8, 3647.0], [71.9, 3648.0], [72.0, 3658.0], [72.1, 3668.0], [72.2, 3670.0], [72.3, 3670.0], [72.4, 3680.0], [72.5, 3685.0], [72.6, 3692.0], [72.7, 3696.0], [72.8, 3697.0], [72.9, 3710.0], [73.0, 3710.0], [73.1, 3710.0], [73.2, 3712.0], [73.3, 3715.0], [73.4, 3719.0], [73.5, 3728.0], [73.6, 3732.0], [73.7, 3735.0], [73.8, 3738.0], [73.9, 3739.0], [74.0, 3742.0], [74.1, 3750.0], [74.2, 3754.0], [74.3, 3758.0], [74.4, 3758.0], [74.5, 3759.0], [74.6, 3763.0], [74.7, 3771.0], [74.8, 3777.0], [74.9, 3783.0], [75.0, 3788.0], [75.1, 3804.0], [75.2, 3805.0], [75.3, 3810.0], [75.4, 3820.0], [75.5, 3820.0], [75.6, 3838.0], [75.7, 3838.0], [75.8, 3849.0], [75.9, 3849.0], [76.0, 3855.0], [76.1, 3863.0], [76.2, 3863.0], [76.3, 3873.0], [76.4, 3875.0], [76.5, 3877.0], [76.6, 3887.0], [76.7, 3890.0], [76.8, 3891.0], [76.9, 3900.0], [77.0, 3900.0], [77.1, 3908.0], [77.2, 3912.0], [77.3, 3921.0], [77.4, 3927.0], [77.5, 3935.0], [77.6, 3964.0], [77.7, 3983.0], [77.8, 3990.0], [77.9, 4018.0], [78.0, 4022.0], [78.1, 4030.0], [78.2, 4041.0], [78.3, 4041.0], [78.4, 4065.0], [78.5, 4074.0], [78.6, 4116.0], [78.7, 4117.0], [78.8, 4130.0], [78.9, 4139.0], [79.0, 4149.0], [79.1, 4153.0], [79.2, 4170.0], [79.3, 4177.0], [79.4, 4179.0], [79.5, 4179.0], [79.6, 4185.0], [79.7, 4213.0], [79.8, 4222.0], [79.9, 4238.0], [80.0, 4238.0], [80.1, 4289.0], [80.2, 4315.0], [80.3, 4338.0], [80.4, 4340.0], [80.5, 4356.0], [80.6, 4361.0], [80.7, 4396.0], [80.8, 4396.0], [80.9, 4405.0], [81.0, 4409.0], [81.1, 4414.0], [81.2, 4434.0], [81.3, 4459.0], [81.4, 4464.0], [81.5, 4464.0], [81.6, 4471.0], [81.7, 4501.0], [81.8, 4550.0], [81.9, 4552.0], [82.0, 4553.0], [82.1, 4553.0], [82.2, 4553.0], [82.3, 4575.0], [82.4, 4592.0], [82.5, 4606.0], [82.6, 4641.0], [82.7, 4645.0], [82.8, 4655.0], [82.9, 4658.0], [83.0, 4687.0], [83.1, 4702.0], [83.2, 4708.0], [83.3, 4755.0], [83.4, 4755.0], [83.5, 4775.0], [83.6, 4803.0], [83.7, 4817.0], [83.8, 4827.0], [83.9, 4828.0], [84.0, 4934.0], [84.1, 4937.0], [84.2, 4952.0], [84.3, 4958.0], [84.4, 4991.0], [84.5, 4994.0], [84.6, 4997.0], [84.7, 4997.0], [84.8, 5020.0], [84.9, 5035.0], [85.0, 5036.0], [85.1, 5153.0], [85.2, 5252.0], [85.3, 5254.0], [85.4, 5255.0], [85.5, 5269.0], [85.6, 5279.0], [85.7, 5295.0], [85.8, 5320.0], [85.9, 5320.0], [86.0, 5326.0], [86.1, 5348.0], [86.2, 5407.0], [86.3, 5411.0], [86.4, 5420.0], [86.5, 5512.0], [86.6, 5536.0], [86.7, 5594.0], [86.8, 5604.0], [86.9, 5640.0], [87.0, 5720.0], [87.1, 5785.0], [87.2, 5785.0], [87.3, 5804.0], [87.4, 6014.0], [87.5, 6018.0], [87.6, 6049.0], [87.7, 6058.0], [87.8, 6064.0], [87.9, 6078.0], [88.0, 6081.0], [88.1, 6085.0], [88.2, 6201.0], [88.3, 6371.0], [88.4, 6384.0], [88.5, 6384.0], [88.6, 6390.0], [88.7, 6399.0], [88.8, 6437.0], [88.9, 6458.0], [89.0, 6463.0], [89.1, 6503.0], [89.2, 6509.0], [89.3, 6529.0], [89.4, 6566.0], [89.5, 6655.0], [89.6, 6677.0], [89.7, 6712.0], [89.8, 6712.0], [89.9, 6785.0], [90.0, 6875.0], [90.1, 6877.0], [90.2, 6913.0], [90.3, 6919.0], [90.4, 7017.0], [90.5, 7034.0], [90.6, 7038.0], [90.7, 7049.0], [90.8, 7071.0], [90.9, 7075.0], [91.0, 7098.0], [91.1, 7098.0], [91.2, 7157.0], [91.3, 7159.0], [91.4, 7209.0], [91.5, 7225.0], [91.6, 7315.0], [91.7, 7370.0], [91.8, 7478.0], [91.9, 7532.0], [92.0, 7562.0], [92.1, 7631.0], [92.2, 7666.0], [92.3, 7758.0], [92.4, 7758.0], [92.5, 7762.0], [92.6, 7771.0], [92.7, 7872.0], [92.8, 7903.0], [92.9, 7925.0], [93.0, 7943.0], [93.1, 7994.0], [93.2, 8001.0], [93.3, 8005.0], [93.4, 8011.0], [93.5, 8012.0], [93.6, 8012.0], [93.7, 8026.0], [93.8, 8071.0], [93.9, 8073.0], [94.0, 8100.0], [94.1, 8109.0], [94.2, 8118.0], [94.3, 8157.0], [94.4, 8179.0], [94.5, 8303.0], [94.6, 8349.0], [94.7, 8433.0], [94.8, 8440.0], [94.9, 8440.0], [95.0, 8483.0], [95.1, 8522.0], [95.2, 8588.0], [95.3, 8604.0], [95.4, 8608.0], [95.5, 8812.0], [95.6, 8819.0], [95.7, 8834.0], [95.8, 8880.0], [95.9, 8880.0], [96.0, 8974.0], [96.1, 9051.0], [96.2, 9051.0], [96.3, 9100.0], [96.4, 9164.0], [96.5, 9211.0], [96.6, 9361.0], [96.7, 9379.0], [96.8, 9386.0], [96.9, 9559.0], [97.0, 9608.0], [97.1, 9903.0], [97.2, 10008.0], [97.3, 10018.0], [97.4, 10172.0], [97.5, 10172.0], [97.6, 10234.0], [97.7, 10408.0], [97.8, 10582.0], [97.9, 10677.0], [98.0, 10697.0], [98.1, 11230.0], [98.2, 11466.0], [98.3, 12313.0], [98.4, 12445.0], [98.5, 12678.0], [98.6, 12846.0], [98.7, 13020.0], [98.8, 13020.0], [98.9, 13099.0], [99.0, 13646.0], [99.1, 13778.0], [99.2, 14130.0], [99.3, 14248.0], [99.4, 14499.0], [99.5, 16066.0], [99.6, 17693.0], [99.7, 25269.0], [99.8, 25495.0], [99.9, 25528.0], [100.0, 25528.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 400.0], [0.1, 400.0], [0.2, 409.0], [0.3, 444.0], [0.4, 493.0], [0.5, 711.0], [0.6, 787.0], [0.7, 805.0], [0.8, 822.0], [0.9, 900.0], [1.0, 904.0], [1.1, 923.0], [1.2, 955.0], [1.3, 970.0], [1.4, 1024.0], [1.5, 1024.0], [1.6, 1038.0], [1.7, 1090.0], [1.8, 1096.0], [1.9, 1101.0], [2.0, 1109.0], [2.1, 1120.0], [2.2, 1123.0], [2.3, 1124.0], [2.4, 1131.0], [2.5, 1150.0], [2.6, 1158.0], [2.7, 1163.0], [2.8, 1173.0], [2.9, 1177.0], [3.0, 1183.0], [3.1, 1186.0], [3.2, 1189.0], [3.3, 1191.0], [3.4, 1192.0], [3.5, 1197.0], [3.6, 1206.0], [3.7, 1210.0], [3.8, 1215.0], [3.9, 1216.0], [4.0, 1217.0], [4.1, 1217.0], [4.2, 1231.0], [4.3, 1243.0], [4.4, 1245.0], [4.5, 1252.0], [4.6, 1263.0], [4.7, 1265.0], [4.8, 1276.0], [4.9, 1284.0], [5.0, 1290.0], [5.1, 1296.0], [5.2, 1298.0], [5.3, 1305.0], [5.4, 1309.0], [5.5, 1316.0], [5.6, 1323.0], [5.7, 1332.0], [5.8, 1334.0], [5.9, 1335.0], [6.0, 1335.0], [6.1, 1340.0], [6.2, 1347.0], [6.3, 1364.0], [6.4, 1401.0], [6.5, 1413.0], [6.6, 1416.0], [6.7, 1420.0], [6.8, 1435.0], [6.9, 1457.0], [7.0, 1470.0], [7.1, 1497.0], [7.2, 1518.0], [7.3, 1541.0], [7.4, 1552.0], [7.5, 1603.0], [7.6, 1604.0], [7.7, 1607.0], [7.8, 1613.0], [7.9, 1614.0], [8.0, 1641.0], [8.1, 1645.0], [8.2, 1677.0], [8.3, 1684.0], [8.4, 1701.0], [8.5, 1702.0], [8.6, 1728.0], [8.7, 1797.0], [8.8, 1814.0], [8.9, 1879.0], [9.0, 1911.0], [9.1, 1930.0], [9.2, 1936.0], [9.3, 1947.0], [9.4, 1968.0], [9.5, 1979.0], [9.6, 1990.0], [9.7, 1995.0], [9.8, 2001.0], [9.9, 2004.0], [10.0, 2020.0], [10.1, 2023.0], [10.2, 2026.0], [10.3, 2030.0], [10.4, 2056.0], [10.5, 2071.0], [10.6, 2075.0], [10.7, 2086.0], [10.8, 2093.0], [10.9, 2097.0], [11.0, 2102.0], [11.1, 2102.0], [11.2, 2103.0], [11.3, 2112.0], [11.4, 2113.0], [11.5, 2124.0], [11.6, 2124.0], [11.7, 2128.0], [11.8, 2132.0], [11.9, 2134.0], [12.0, 2139.0], [12.1, 2142.0], [12.2, 2144.0], [12.3, 2144.0], [12.4, 2169.0], [12.5, 2181.0], [12.6, 2183.0], [12.7, 2184.0], [12.8, 2186.0], [12.9, 2193.0], [13.0, 2195.0], [13.1, 2196.0], [13.2, 2197.0], [13.3, 2200.0], [13.4, 2203.0], [13.5, 2207.0], [13.6, 2209.0], [13.7, 2225.0], [13.8, 2226.0], [13.9, 2227.0], [14.0, 2228.0], [14.1, 2231.0], [14.2, 2234.0], [14.3, 2234.0], [14.4, 2236.0], [14.5, 2262.0], [14.6, 2268.0], [14.7, 2273.0], [14.8, 2281.0], [14.9, 2286.0], [15.0, 2290.0], [15.1, 2293.0], [15.2, 2299.0], [15.3, 2315.0], [15.4, 2332.0], [15.5, 2333.0], [15.6, 2339.0], [15.7, 2339.0], [15.8, 2340.0], [15.9, 2351.0], [16.0, 2361.0], [16.1, 2367.0], [16.2, 2370.0], [16.3, 2373.0], [16.4, 2377.0], [16.5, 2378.0], [16.6, 2381.0], [16.7, 2381.0], [16.8, 2381.0], [16.9, 2384.0], [17.0, 2387.0], [17.1, 2388.0], [17.2, 2396.0], [17.3, 2401.0], [17.4, 2401.0], [17.5, 2412.0], [17.6, 2416.0], [17.7, 2417.0], [17.8, 2419.0], [17.9, 2419.0], [18.0, 2425.0], [18.1, 2425.0], [18.2, 2427.0], [18.3, 2428.0], [18.4, 2432.0], [18.5, 2435.0], [18.6, 2439.0], [18.7, 2441.0], [18.8, 2442.0], [18.9, 2443.0], [19.0, 2459.0], [19.1, 2460.0], [19.2, 2462.0], [19.3, 2463.0], [19.4, 2471.0], [19.5, 2472.0], [19.6, 2480.0], [19.7, 2481.0], [19.8, 2484.0], [19.9, 2489.0], [20.0, 2493.0], [20.1, 2505.0], [20.2, 2517.0], [20.3, 2519.0], [20.4, 2526.0], [20.5, 2527.0], [20.6, 2527.0], [20.7, 2530.0], [20.8, 2535.0], [20.9, 2537.0], [21.0, 2538.0], [21.1, 2541.0], [21.2, 2547.0], [21.3, 2552.0], [21.4, 2553.0], [21.5, 2554.0], [21.6, 2557.0], [21.7, 2557.0], [21.8, 2558.0], [21.9, 2562.0], [22.0, 2562.0], [22.1, 2563.0], [22.2, 2574.0], [22.3, 2580.0], [22.4, 2595.0], [22.5, 2599.0], [22.6, 2604.0], [22.7, 2611.0], [22.8, 2613.0], [22.9, 2618.0], [23.0, 2619.0], [23.1, 2620.0], [23.2, 2625.0], [23.3, 2631.0], [23.4, 2632.0], [23.5, 2639.0], [23.6, 2640.0], [23.7, 2647.0], [23.8, 2653.0], [23.9, 2655.0], [24.0, 2658.0], [24.1, 2659.0], [24.2, 2666.0], [24.3, 2670.0], [24.4, 2678.0], [24.5, 2679.0], [24.6, 2680.0], [24.7, 2690.0], [24.8, 2695.0], [24.9, 2697.0], [25.0, 2700.0], [25.1, 2700.0], [25.2, 2716.0], [25.3, 2717.0], [25.4, 2726.0], [25.5, 2739.0], [25.6, 2746.0], [25.7, 2753.0], [25.8, 2767.0], [25.9, 2771.0], [26.0, 2773.0], [26.1, 2780.0], [26.2, 2781.0], [26.3, 2784.0], [26.4, 2784.0], [26.5, 2786.0], [26.6, 2795.0], [26.7, 2802.0], [26.8, 2817.0], [26.9, 2818.0], [27.0, 2822.0], [27.1, 2823.0], [27.2, 2829.0], [27.3, 2831.0], [27.4, 2842.0], [27.5, 2843.0], [27.6, 2844.0], [27.7, 2849.0], [27.8, 2869.0], [27.9, 2876.0], [28.0, 2884.0], [28.1, 2900.0], [28.2, 2904.0], [28.3, 2904.0], [28.4, 2910.0], [28.5, 2934.0], [28.6, 2959.0], [28.7, 2963.0], [28.8, 2968.0], [28.9, 2979.0], [29.0, 2988.0], [29.1, 2989.0], [29.2, 2991.0], [29.3, 2993.0], [29.4, 2998.0], [29.5, 3005.0], [29.6, 3006.0], [29.7, 3009.0], [29.8, 3009.0], [29.9, 3009.0], [30.0, 3012.0], [30.1, 3012.0], [30.2, 3018.0], [30.3, 3027.0], [30.4, 3030.0], [30.5, 3035.0], [30.6, 3038.0], [30.7, 3043.0], [30.8, 3059.0], [30.9, 3060.0], [31.0, 3069.0], [31.1, 3075.0], [31.2, 3082.0], [31.3, 3082.0], [31.4, 3084.0], [31.5, 3084.0], [31.6, 3089.0], [31.7, 3092.0], [31.8, 3101.0], [31.9, 3102.0], [32.0, 3128.0], [32.1, 3131.0], [32.2, 3134.0], [32.3, 3135.0], [32.4, 3137.0], [32.5, 3138.0], [32.6, 3147.0], [32.7, 3147.0], [32.8, 3152.0], [32.9, 3153.0], [33.0, 3160.0], [33.1, 3174.0], [33.2, 3180.0], [33.3, 3188.0], [33.4, 3201.0], [33.5, 3205.0], [33.6, 3216.0], [33.7, 3216.0], [33.8, 3224.0], [33.9, 3229.0], [34.0, 3232.0], [34.1, 3233.0], [34.2, 3259.0], [34.3, 3260.0], [34.4, 3278.0], [34.5, 3283.0], [34.6, 3301.0], [34.7, 3304.0], [34.8, 3310.0], [34.9, 3319.0], [35.0, 3333.0], [35.1, 3335.0], [35.2, 3337.0], [35.3, 3349.0], [35.4, 3355.0], [35.5, 3380.0], [35.6, 3398.0], [35.7, 3419.0], [35.8, 3444.0], [35.9, 3445.0], [36.0, 3469.0], [36.1, 3473.0], [36.2, 3475.0], [36.3, 3494.0], [36.4, 3498.0], [36.5, 3500.0], [36.6, 3502.0], [36.7, 3524.0], [36.8, 3527.0], [36.9, 3527.0], [37.0, 3536.0], [37.1, 3541.0], [37.2, 3547.0], [37.3, 3562.0], [37.4, 3563.0], [37.5, 3565.0], [37.6, 3566.0], [37.7, 3571.0], [37.8, 3576.0], [37.9, 3584.0], [38.0, 3585.0], [38.1, 3598.0], [38.2, 3606.0], [38.3, 3623.0], [38.4, 3645.0], [38.5, 3664.0], [38.6, 3668.0], [38.7, 3672.0], [38.8, 3686.0], [38.9, 3688.0], [39.0, 3690.0], [39.1, 3692.0], [39.2, 3698.0], [39.3, 3727.0], [39.4, 3761.0], [39.5, 3763.0], [39.6, 3763.0], [39.7, 3769.0], [39.8, 3782.0], [39.9, 3788.0], [40.0, 3797.0], [40.1, 3801.0], [40.2, 3808.0], [40.3, 3810.0], [40.4, 3814.0], [40.5, 3815.0], [40.6, 3821.0], [40.7, 3821.0], [40.8, 3823.0], [40.9, 3825.0], [41.0, 3826.0], [41.1, 3828.0], [41.2, 3828.0], [41.3, 3831.0], [41.4, 3837.0], [41.5, 3842.0], [41.6, 3845.0], [41.7, 3845.0], [41.8, 3848.0], [41.9, 3853.0], [42.0, 3856.0], [42.1, 3858.0], [42.2, 3860.0], [42.3, 3878.0], [42.4, 3881.0], [42.5, 3890.0], [42.6, 3891.0], [42.7, 3898.0], [42.8, 3911.0], [42.9, 3913.0], [43.0, 3914.0], [43.1, 3923.0], [43.2, 3927.0], [43.3, 3932.0], [43.4, 3932.0], [43.5, 3933.0], [43.6, 3950.0], [43.7, 3955.0], [43.8, 3959.0], [43.9, 3965.0], [44.0, 3978.0], [44.1, 3983.0], [44.2, 3984.0], [44.3, 3992.0], [44.4, 3992.0], [44.5, 3996.0], [44.6, 3996.0], [44.7, 3999.0], [44.8, 4006.0], [44.9, 4013.0], [45.0, 4015.0], [45.1, 4017.0], [45.2, 4022.0], [45.3, 4029.0], [45.4, 4033.0], [45.5, 4035.0], [45.6, 4038.0], [45.7, 4038.0], [45.8, 4049.0], [45.9, 4052.0], [46.0, 4056.0], [46.1, 4060.0], [46.2, 4064.0], [46.3, 4067.0], [46.4, 4067.0], [46.5, 4069.0], [46.6, 4070.0], [46.7, 4075.0], [46.8, 4076.0], [46.9, 4084.0], [47.0, 4096.0], [47.1, 4097.0], [47.2, 4102.0], [47.3, 4118.0], [47.4, 4119.0], [47.5, 4125.0], [47.6, 4154.0], [47.7, 4163.0], [47.8, 4167.0], [47.9, 4175.0], [48.0, 4187.0], [48.1, 4192.0], [48.2, 4214.0], [48.3, 4218.0], [48.4, 4224.0], [48.5, 4239.0], [48.6, 4256.0], [48.7, 4262.0], [48.8, 4278.0], [48.9, 4290.0], [49.0, 4294.0], [49.1, 4294.0], [49.2, 4298.0], [49.3, 4320.0], [49.4, 4322.0], [49.5, 4322.0], [49.6, 4332.0], [49.7, 4358.0], [49.8, 4359.0], [49.9, 4361.0], [50.0, 4361.0], [50.1, 4367.0], [50.2, 4367.0], [50.3, 4394.0], [50.4, 4402.0], [50.5, 4407.0], [50.6, 4409.0], [50.7, 4425.0], [50.8, 4429.0], [50.9, 4435.0], [51.0, 4443.0], [51.1, 4464.0], [51.2, 4466.0], [51.3, 4470.0], [51.4, 4482.0], [51.5, 4482.0], [51.6, 4497.0], [51.7, 4503.0], [51.8, 4504.0], [51.9, 4511.0], [52.0, 4512.0], [52.1, 4519.0], [52.2, 4524.0], [52.3, 4525.0], [52.4, 4526.0], [52.5, 4536.0], [52.6, 4540.0], [52.7, 4540.0], [52.8, 4540.0], [52.9, 4546.0], [53.0, 4552.0], [53.1, 4567.0], [53.2, 4569.0], [53.3, 4577.0], [53.4, 4584.0], [53.5, 4588.0], [53.6, 4593.0], [53.7, 4600.0], [53.8, 4604.0], [53.9, 4621.0], [54.0, 4631.0], [54.1, 4640.0], [54.2, 4656.0], [54.3, 4662.0], [54.4, 4670.0], [54.5, 4679.0], [54.6, 4689.0], [54.7, 4698.0], [54.8, 4707.0], [54.9, 4708.0], [55.0, 4729.0], [55.1, 4738.0], [55.2, 4741.0], [55.3, 4752.0], [55.4, 4762.0], [55.5, 4773.0], [55.6, 4790.0], [55.7, 4796.0], [55.8, 4797.0], [55.9, 4802.0], [56.0, 4806.0], [56.1, 4808.0], [56.2, 4835.0], [56.3, 4836.0], [56.4, 4852.0], [56.5, 4883.0], [56.6, 4895.0], [56.7, 4897.0], [56.8, 4913.0], [56.9, 4919.0], [57.0, 4926.0], [57.1, 4938.0], [57.2, 4941.0], [57.3, 4953.0], [57.4, 4961.0], [57.5, 4971.0], [57.6, 4974.0], [57.7, 4977.0], [57.8, 4978.0], [57.9, 4989.0], [58.0, 4999.0], [58.1, 5016.0], [58.2, 5018.0], [58.3, 5044.0], [58.4, 5048.0], [58.5, 5065.0], [58.6, 5069.0], [58.7, 5071.0], [58.8, 5078.0], [58.9, 5085.0], [59.0, 5092.0], [59.1, 5093.0], [59.2, 5097.0], [59.3, 5101.0], [59.4, 5103.0], [59.5, 5105.0], [59.6, 5122.0], [59.7, 5122.0], [59.8, 5124.0], [59.9, 5136.0], [60.0, 5147.0], [60.1, 5154.0], [60.2, 5188.0], [60.3, 5191.0], [60.4, 5196.0], [60.5, 5204.0], [60.6, 5207.0], [60.7, 5226.0], [60.8, 5249.0], [60.9, 5264.0], [61.0, 5269.0], [61.1, 5283.0], [61.2, 5293.0], [61.3, 5297.0], [61.4, 5300.0], [61.5, 5316.0], [61.6, 5334.0], [61.7, 5334.0], [61.8, 5351.0], [61.9, 5367.0], [62.0, 5368.0], [62.1, 5369.0], [62.2, 5370.0], [62.3, 5377.0], [62.4, 5380.0], [62.5, 5389.0], [62.6, 5392.0], [62.7, 5401.0], [62.8, 5419.0], [62.9, 5435.0], [63.0, 5443.0], [63.1, 5454.0], [63.2, 5467.0], [63.3, 5482.0], [63.4, 5486.0], [63.5, 5501.0], [63.6, 5503.0], [63.7, 5508.0], [63.8, 5524.0], [63.9, 5528.0], [64.0, 5533.0], [64.1, 5536.0], [64.2, 5537.0], [64.3, 5550.0], [64.4, 5553.0], [64.5, 5577.0], [64.6, 5588.0], [64.7, 5597.0], [64.8, 5603.0], [64.9, 5614.0], [65.0, 5615.0], [65.1, 5620.0], [65.2, 5641.0], [65.3, 5651.0], [65.4, 5659.0], [65.5, 5669.0], [65.6, 5681.0], [65.7, 5690.0], [65.8, 5698.0], [65.9, 5699.0], [66.0, 5705.0], [66.1, 5706.0], [66.2, 5710.0], [66.3, 5716.0], [66.4, 5717.0], [66.5, 5727.0], [66.6, 5730.0], [66.7, 5742.0], [66.8, 5748.0], [66.9, 5764.0], [67.0, 5780.0], [67.1, 5788.0], [67.2, 5818.0], [67.3, 5818.0], [67.4, 5836.0], [67.5, 5838.0], [67.6, 5845.0], [67.7, 5848.0], [67.8, 5853.0], [67.9, 5855.0], [68.0, 5856.0], [68.1, 5859.0], [68.2, 5868.0], [68.3, 5870.0], [68.4, 5871.0], [68.5, 5881.0], [68.6, 5886.0], [68.7, 5899.0], [68.8, 5919.0], [68.9, 5930.0], [69.0, 5932.0], [69.1, 5941.0], [69.2, 5986.0], [69.3, 5989.0], [69.4, 5990.0], [69.5, 5999.0], [69.6, 6003.0], [69.7, 6037.0], [69.8, 6077.0], [69.9, 6081.0], [70.0, 6104.0], [70.1, 6122.0], [70.2, 6123.0], [70.3, 6138.0], [70.4, 6138.0], [70.5, 6139.0], [70.6, 6144.0], [70.7, 6149.0], [70.8, 6155.0], [70.9, 6155.0], [71.0, 6163.0], [71.1, 6166.0], [71.2, 6202.0], [71.3, 6220.0], [71.4, 6220.0], [71.5, 6220.0], [71.6, 6220.0], [71.7, 6239.0], [71.8, 6280.0], [71.9, 6325.0], [72.0, 6326.0], [72.1, 6331.0], [72.2, 6337.0], [72.3, 6361.0], [72.4, 6399.0], [72.5, 6402.0], [72.6, 6411.0], [72.7, 6430.0], [72.8, 6460.0], [72.9, 6467.0], [73.0, 6472.0], [73.1, 6478.0], [73.2, 6523.0], [73.3, 6537.0], [73.4, 6559.0], [73.5, 6582.0], [73.6, 6582.0], [73.7, 6597.0], [73.8, 6600.0], [73.9, 6604.0], [74.0, 6608.0], [74.1, 6615.0], [74.2, 6638.0], [74.3, 6658.0], [74.4, 6686.0], [74.5, 6687.0], [74.6, 6705.0], [74.7, 6706.0], [74.8, 6754.0], [74.9, 6763.0], [75.0, 6763.0], [75.1, 6800.0], [75.2, 6807.0], [75.3, 6809.0], [75.4, 6820.0], [75.5, 6838.0], [75.6, 6842.0], [75.7, 6846.0], [75.8, 6860.0], [75.9, 6864.0], [76.0, 6875.0], [76.1, 6875.0], [76.2, 6881.0], [76.3, 6889.0], [76.4, 6892.0], [76.5, 6923.0], [76.6, 6936.0], [76.7, 6938.0], [76.8, 6972.0], [76.9, 6977.0], [77.0, 6977.0], [77.1, 6994.0], [77.2, 6996.0], [77.3, 7009.0], [77.4, 7061.0], [77.5, 7075.0], [77.6, 7088.0], [77.7, 7091.0], [77.8, 7130.0], [77.9, 7137.0], [78.0, 7142.0], [78.1, 7157.0], [78.2, 7160.0], [78.3, 7162.0], [78.4, 7171.0], [78.5, 7175.0], [78.6, 7193.0], [78.7, 7216.0], [78.8, 7275.0], [78.9, 7300.0], [79.0, 7301.0], [79.1, 7325.0], [79.2, 7353.0], [79.3, 7354.0], [79.4, 7371.0], [79.5, 7398.0], [79.6, 7403.0], [79.7, 7490.0], [79.8, 7506.0], [79.9, 7512.0], [80.0, 7530.0], [80.1, 7535.0], [80.2, 7539.0], [80.3, 7540.0], [80.4, 7553.0], [80.5, 7574.0], [80.6, 7609.0], [80.7, 7614.0], [80.8, 7622.0], [80.9, 7635.0], [81.0, 7640.0], [81.1, 7649.0], [81.2, 7653.0], [81.3, 7660.0], [81.4, 7686.0], [81.5, 7722.0], [81.6, 7757.0], [81.7, 7772.0], [81.8, 7791.0], [81.9, 7796.0], [82.0, 7802.0], [82.1, 7805.0], [82.2, 7808.0], [82.3, 7830.0], [82.4, 7834.0], [82.5, 7834.0], [82.6, 7884.0], [82.7, 7891.0], [82.8, 7919.0], [82.9, 7931.0], [83.0, 7931.0], [83.1, 7933.0], [83.2, 7936.0], [83.3, 7947.0], [83.4, 7957.0], [83.5, 7966.0], [83.6, 7969.0], [83.7, 7995.0], [83.8, 8017.0], [83.9, 8027.0], [84.0, 8036.0], [84.1, 8045.0], [84.2, 8069.0], [84.3, 8088.0], [84.4, 8090.0], [84.5, 8098.0], [84.6, 8110.0], [84.7, 8126.0], [84.8, 8136.0], [84.9, 8163.0], [85.0, 8185.0], [85.1, 8189.0], [85.2, 8239.0], [85.3, 8246.0], [85.4, 8289.0], [85.5, 8290.0], [85.6, 8317.0], [85.7, 8497.0], [85.8, 8498.0], [85.9, 8499.0], [86.0, 8512.0], [86.1, 8520.0], [86.2, 8528.0], [86.3, 8541.0], [86.4, 8562.0], [86.5, 8589.0], [86.6, 8612.0], [86.7, 8640.0], [86.8, 8640.0], [86.9, 8645.0], [87.0, 8646.0], [87.1, 8679.0], [87.2, 8682.0], [87.3, 8735.0], [87.4, 8768.0], [87.5, 8800.0], [87.6, 8819.0], [87.7, 8834.0], [87.8, 8850.0], [87.9, 8856.0], [88.0, 8874.0], [88.1, 8903.0], [88.2, 8913.0], [88.3, 8932.0], [88.4, 8943.0], [88.5, 8950.0], [88.6, 9001.0], [88.7, 9004.0], [88.8, 9056.0], [88.9, 9058.0], [89.0, 9074.0], [89.1, 9080.0], [89.2, 9087.0], [89.3, 9111.0], [89.4, 9155.0], [89.5, 9173.0], [89.6, 9231.0], [89.7, 9270.0], [89.8, 9275.0], [89.9, 9279.0], [90.0, 9311.0], [90.1, 9341.0], [90.2, 9347.0], [90.3, 9525.0], [90.4, 9617.0], [90.5, 9733.0], [90.6, 9748.0], [90.7, 9756.0], [90.8, 9843.0], [90.9, 9882.0], [91.0, 9902.0], [91.1, 10012.0], [91.2, 10097.0], [91.3, 10169.0], [91.4, 10186.0], [91.5, 10201.0], [91.6, 10513.0], [91.7, 10551.0], [91.8, 10557.0], [91.9, 10587.0], [92.0, 10698.0], [92.1, 10739.0], [92.2, 10765.0], [92.3, 10765.0], [92.4, 10780.0], [92.5, 10783.0], [92.6, 10878.0], [92.7, 10899.0], [92.8, 10925.0], [92.9, 10928.0], [93.0, 10977.0], [93.1, 10989.0], [93.2, 11006.0], [93.3, 11007.0], [93.4, 11112.0], [93.5, 11124.0], [93.6, 11210.0], [93.7, 11253.0], [93.8, 11268.0], [93.9, 11318.0], [94.0, 11355.0], [94.1, 11525.0], [94.2, 11570.0], [94.3, 11585.0], [94.4, 11607.0], [94.5, 11637.0], [94.6, 11696.0], [94.7, 11788.0], [94.8, 11791.0], [94.9, 11907.0], [95.0, 11979.0], [95.1, 12213.0], [95.2, 12267.0], [95.3, 12343.0], [95.4, 12396.0], [95.5, 12451.0], [95.6, 12505.0], [95.7, 12613.0], [95.8, 12615.0], [95.9, 12767.0], [96.0, 13036.0], [96.1, 13053.0], [96.2, 13069.0], [96.3, 13255.0], [96.4, 13427.0], [96.5, 13435.0], [96.6, 13685.0], [96.7, 13760.0], [96.8, 13819.0], [96.9, 13891.0], [97.0, 13968.0], [97.1, 14384.0], [97.2, 14609.0], [97.3, 14746.0], [97.4, 14837.0], [97.5, 15030.0], [97.6, 15153.0], [97.7, 15162.0], [97.8, 15221.0], [97.9, 15295.0], [98.0, 15478.0], [98.1, 15584.0], [98.2, 15760.0], [98.3, 15762.0], [98.4, 16559.0], [98.5, 16831.0], [98.6, 17411.0], [98.7, 17632.0], [98.8, 17917.0], [98.9, 18152.0], [99.0, 18279.0], [99.1, 18499.0], [99.2, 19512.0], [99.3, 19873.0], [99.4, 21138.0], [99.5, 21566.0], [99.6, 21782.0], [99.7, 26011.0], [99.8, 26262.0], [99.9, 26366.0], [100.0, 26366.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 74.0, "series": [{"data": [[0.0, 1.0], [600.0, 51.0], [700.0, 61.0], [800.0, 18.0], [900.0, 48.0], [1000.0, 63.0], [1100.0, 46.0], [1200.0, 28.0], [1300.0, 27.0], [1400.0, 22.0], [1500.0, 27.0], [1600.0, 11.0], [1700.0, 23.0], [1800.0, 18.0], [1900.0, 15.0], [2000.0, 18.0], [2100.0, 18.0], [2300.0, 22.0], [2200.0, 19.0], [2400.0, 19.0], [2500.0, 18.0], [2600.0, 19.0], [2800.0, 22.0], [2700.0, 18.0], [2900.0, 12.0], [3000.0, 9.0], [3100.0, 9.0], [3300.0, 12.0], [3200.0, 17.0], [3400.0, 11.0], [3500.0, 11.0], [3600.0, 7.0], [3700.0, 4.0], [3800.0, 2.0], [3900.0, 6.0], [4000.0, 8.0], [4200.0, 7.0], [4300.0, 7.0], [4100.0, 3.0], [4400.0, 6.0], [4500.0, 6.0], [4700.0, 3.0], [4800.0, 2.0], [5000.0, 5.0], [4900.0, 4.0], [5100.0, 3.0], [5200.0, 1.0], [5300.0, 5.0], [5600.0, 1.0], [5500.0, 1.0], [5800.0, 3.0], [6000.0, 2.0], [5900.0, 1.0], [6600.0, 1.0], [6700.0, 1.0], [7000.0, 2.0], [7100.0, 1.0], [7400.0, 1.0], [7600.0, 1.0], [7900.0, 1.0], [7700.0, 1.0], [8700.0, 1.0], [8600.0, 2.0], [9200.0, 1.0], [9100.0, 2.0], [8900.0, 1.0], [8800.0, 1.0], [9300.0, 1.0], [11100.0, 1.0], [12100.0, 2.0], [15100.0, 2.0], [16000.0, 1.0], [100.0, 3.0], [200.0, 15.0], [300.0, 11.0], [400.0, 13.0], [500.0, 56.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[400.0, 2.0], [500.0, 11.0], [600.0, 10.0], [700.0, 9.0], [800.0, 11.0], [900.0, 5.0], [1000.0, 6.0], [1100.0, 14.0], [1200.0, 31.0], [1300.0, 46.0], [1400.0, 74.0], [1500.0, 46.0], [1600.0, 41.0], [1700.0, 25.0], [1800.0, 24.0], [1900.0, 20.0], [2000.0, 13.0], [2100.0, 12.0], [2200.0, 13.0], [2300.0, 20.0], [2400.0, 22.0], [2500.0, 24.0], [2600.0, 15.0], [2700.0, 22.0], [2800.0, 15.0], [2900.0, 15.0], [3000.0, 9.0], [3100.0, 13.0], [3300.0, 23.0], [3200.0, 23.0], [3400.0, 18.0], [3500.0, 23.0], [3600.0, 17.0], [3700.0, 20.0], [3800.0, 17.0], [3900.0, 9.0], [4000.0, 6.0], [4100.0, 10.0], [4300.0, 6.0], [4200.0, 5.0], [4400.0, 8.0], [4500.0, 7.0], [4600.0, 6.0], [4700.0, 4.0], [4800.0, 4.0], [5000.0, 3.0], [4900.0, 7.0], [5100.0, 1.0], [5200.0, 6.0], [5300.0, 3.0], [5600.0, 2.0], [5500.0, 3.0], [5400.0, 3.0], [5800.0, 1.0], [5700.0, 2.0], [6000.0, 8.0], [6200.0, 1.0], [6300.0, 4.0], [6400.0, 3.0], [6500.0, 4.0], [6600.0, 2.0], [6800.0, 2.0], [6900.0, 2.0], [6700.0, 2.0], [7000.0, 7.0], [7100.0, 2.0], [7300.0, 2.0], [7400.0, 1.0], [7200.0, 2.0], [7600.0, 2.0], [7500.0, 2.0], [7700.0, 3.0], [7900.0, 4.0], [7800.0, 1.0], [8100.0, 5.0], [8000.0, 7.0], [8400.0, 3.0], [8600.0, 2.0], [8500.0, 2.0], [8300.0, 2.0], [8900.0, 1.0], [8800.0, 5.0], [9100.0, 2.0], [9000.0, 1.0], [9200.0, 1.0], [9300.0, 3.0], [9500.0, 1.0], [9600.0, 1.0], [10200.0, 1.0], [10000.0, 2.0], [9900.0, 1.0], [10100.0, 1.0], [10500.0, 1.0], [10600.0, 2.0], [10400.0, 1.0], [11200.0, 1.0], [11400.0, 1.0], [12600.0, 1.0], [12400.0, 1.0], [12300.0, 1.0], [13000.0, 2.0], [12800.0, 1.0], [13600.0, 1.0], [13700.0, 1.0], [14100.0, 1.0], [14200.0, 1.0], [14400.0, 1.0], [16000.0, 1.0], [17600.0, 1.0], [25500.0, 1.0], [25200.0, 1.0], [25400.0, 1.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[400.0, 4.0], [700.0, 2.0], [800.0, 2.0], [900.0, 5.0], [1000.0, 5.0], [1100.0, 17.0], [1200.0, 17.0], [1300.0, 11.0], [1400.0, 8.0], [1500.0, 3.0], [1600.0, 9.0], [1700.0, 4.0], [1800.0, 2.0], [1900.0, 8.0], [2000.0, 12.0], [2100.0, 23.0], [2200.0, 20.0], [2300.0, 20.0], [2400.0, 28.0], [2500.0, 25.0], [2600.0, 24.0], [2700.0, 16.0], [2800.0, 14.0], [2900.0, 14.0], [3000.0, 23.0], [3100.0, 16.0], [3300.0, 11.0], [3200.0, 12.0], [3400.0, 8.0], [3500.0, 17.0], [3600.0, 11.0], [3700.0, 8.0], [3800.0, 27.0], [3900.0, 20.0], [4000.0, 24.0], [4100.0, 10.0], [4300.0, 10.0], [4200.0, 11.0], [4500.0, 20.0], [4600.0, 11.0], [4400.0, 13.0], [4700.0, 11.0], [4800.0, 9.0], [4900.0, 13.0], [5100.0, 12.0], [5000.0, 12.0], [5300.0, 13.0], [5200.0, 9.0], [5500.0, 13.0], [5600.0, 12.0], [5400.0, 8.0], [5800.0, 16.0], [5700.0, 12.0], [5900.0, 8.0], [6100.0, 12.0], [6000.0, 4.0], [6300.0, 6.0], [6200.0, 7.0], [6400.0, 7.0], [6500.0, 6.0], [6600.0, 8.0], [6900.0, 8.0], [6700.0, 4.0], [6800.0, 14.0], [7100.0, 9.0], [7000.0, 5.0], [7300.0, 7.0], [7200.0, 2.0], [7400.0, 2.0], [7600.0, 9.0], [7500.0, 8.0], [7900.0, 10.0], [7700.0, 5.0], [7800.0, 8.0], [8000.0, 8.0], [8100.0, 6.0], [8200.0, 4.0], [8500.0, 6.0], [8400.0, 3.0], [8600.0, 7.0], [8700.0, 2.0], [8300.0, 1.0], [8800.0, 6.0], [9000.0, 7.0], [8900.0, 5.0], [9200.0, 4.0], [9100.0, 3.0], [9500.0, 1.0], [9700.0, 3.0], [9600.0, 1.0], [9300.0, 3.0], [9900.0, 1.0], [10000.0, 2.0], [9800.0, 2.0], [10100.0, 2.0], [10200.0, 1.0], [10500.0, 4.0], [10700.0, 5.0], [10600.0, 1.0], [11200.0, 3.0], [10800.0, 2.0], [11100.0, 2.0], [10900.0, 4.0], [11000.0, 2.0], [11700.0, 2.0], [11300.0, 2.0], [11500.0, 3.0], [11600.0, 3.0], [12200.0, 2.0], [11900.0, 2.0], [12300.0, 2.0], [12500.0, 1.0], [12400.0, 1.0], [12600.0, 2.0], [12700.0, 1.0], [13000.0, 3.0], [13200.0, 1.0], [13600.0, 1.0], [13800.0, 2.0], [13400.0, 2.0], [13700.0, 1.0], [13900.0, 1.0], [14300.0, 1.0], [14800.0, 1.0], [14600.0, 1.0], [14700.0, 1.0], [15200.0, 2.0], [15100.0, 2.0], [15000.0, 1.0], [15700.0, 2.0], [15400.0, 1.0], [15500.0, 1.0], [16500.0, 1.0], [16800.0, 1.0], [17400.0, 1.0], [17600.0, 1.0], [18400.0, 1.0], [18200.0, 1.0], [18100.0, 1.0], [17900.0, 1.0], [19500.0, 1.0], [19800.0, 1.0], [21100.0, 1.0], [21500.0, 1.0], [21700.0, 1.0], [26200.0, 1.0], [26000.0, 1.0], [26300.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 26300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 42.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1991.0, "series": [{"data": [[0.0, 42.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 625.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1991.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 182.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70568318E12, "maxY": 214.26378539493328, "series": [{"data": [[1.70568342E12, 144.83366733466934], [1.70568318E12, 214.26378539493328], [1.70568348E12, 1.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70568348E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 232.0, "minX": 1.0, "maxY": 19078.5, "series": [{"data": [[2.0, 7697.0], [3.0, 7082.0], [4.0, 572.0], [5.0, 2975.5], [6.0, 4954.5], [7.0, 668.0], [8.0, 4834.0], [9.0, 582.0], [10.0, 8661.0], [11.0, 12001.0], [12.0, 8682.5], [13.0, 10085.5], [14.0, 5084.0], [15.0, 6312.5], [16.0, 5868.5], [17.0, 1023.0], [18.0, 2306.0], [19.0, 3677.0], [20.0, 766.0], [21.0, 4545.25], [22.0, 12109.0], [23.0, 569.0], [24.0, 3470.0], [25.0, 4554.0], [26.0, 765.0], [27.0, 2171.0], [28.0, 794.0], [29.0, 3854.0], [30.0, 4045.0], [31.0, 3217.0], [33.0, 4627.5], [32.0, 4178.0], [35.0, 1951.5], [34.0, 2838.0], [37.0, 3250.5], [36.0, 2540.5], [39.0, 5859.666666666667], [38.0, 3134.0], [41.0, 2695.0], [40.0, 3230.0], [43.0, 5188.5], [42.0, 8785.0], [45.0, 3131.25], [44.0, 4135.0], [47.0, 7405.0], [46.0, 3850.0], [49.0, 3077.0], [48.0, 3520.6666666666665], [51.0, 1991.0], [50.0, 2786.0], [52.0, 9039.0], [53.0, 2661.0], [55.0, 2801.5], [57.0, 1931.5], [56.0, 3436.4], [59.0, 6185.0], [58.0, 3988.0], [61.0, 2587.5], [60.0, 2238.6666666666665], [63.0, 3638.0], [62.0, 2853.5], [66.0, 4983.0], [65.0, 6280.0], [64.0, 4429.0], [67.0, 2492.0], [70.0, 1551.0], [69.0, 392.5], [68.0, 2028.5], [74.0, 2688.8], [73.0, 2750.0], [72.0, 2904.5], [79.0, 2952.5], [78.0, 1919.5], [77.0, 2472.0], [76.0, 3841.25], [83.0, 2424.5], [82.0, 2070.0], [81.0, 1802.0], [80.0, 2557.0], [87.0, 1091.0], [86.0, 2074.0], [85.0, 2315.0], [84.0, 2608.5], [91.0, 975.0], [90.0, 2940.0], [89.0, 2433.25], [88.0, 3050.5], [95.0, 1026.5], [94.0, 1879.5], [93.0, 3514.0], [92.0, 2777.0], [98.0, 2819.5], [97.0, 1425.0], [96.0, 1974.0], [99.0, 6076.0], [103.0, 3054.5], [102.0, 1382.6666666666667], [101.0, 3398.5], [100.0, 1873.5], [107.0, 1737.0], [106.0, 2927.5], [105.0, 1380.5], [104.0, 2096.0], [110.0, 1295.0], [109.0, 1263.3333333333333], [108.0, 5458.5], [111.0, 1117.0], [115.0, 1332.0], [114.0, 1575.5], [113.0, 1327.5], [112.0, 1546.0], [118.0, 1414.0], [117.0, 1418.0], [116.0, 1685.5], [119.0, 1385.0], [123.0, 1721.0], [122.0, 2081.0], [121.0, 4462.0], [120.0, 2341.0], [127.0, 761.8333333333333], [126.0, 1583.0], [125.0, 2211.5714285714284], [124.0, 664.0], [135.0, 1849.0], [134.0, 1103.5], [133.0, 1166.75], [132.0, 1548.5], [131.0, 2127.0], [130.0, 1495.6666666666667], [129.0, 1115.2], [128.0, 1817.0], [143.0, 1633.0], [142.0, 1462.5], [141.0, 2637.2], [137.0, 1483.5], [136.0, 1472.5], [138.0, 800.0], [140.0, 1091.5], [151.0, 1647.0], [150.0, 2990.0], [149.0, 4150.0], [148.0, 2234.5], [147.0, 1657.5], [146.0, 1975.0], [145.0, 2370.75], [159.0, 1339.6], [158.0, 3630.0], [156.0, 2286.625], [155.0, 2468.3333333333335], [157.0, 973.0], [153.0, 1810.0], [167.0, 954.8571428571429], [166.0, 1977.8999999999999], [165.0, 2080.625], [164.0, 1891.272727272727], [163.0, 1757.3333333333335], [161.0, 3204.5], [160.0, 2071.0], [162.0, 1538.5], [175.0, 1912.0], [174.0, 1530.0869565217392], [171.0, 1566.454545454546], [170.0, 1281.7272727272727], [169.0, 1793.5], [168.0, 1551.4166666666667], [172.0, 1239.814814814815], [173.0, 1310.7222222222222], [183.0, 2083.25], [182.0, 1817.5714285714287], [181.0, 1367.2857142857142], [180.0, 1411.6666666666667], [179.0, 2030.75], [177.0, 1555.857142857143], [176.0, 1778.0], [178.0, 1263.75], [191.0, 3741.0], [190.0, 1162.3333333333335], [189.0, 1575.0], [188.0, 1150.6666666666667], [187.0, 1129.6666666666667], [186.0, 1540.5], [185.0, 1563.4285714285716], [184.0, 1479.0], [199.0, 2104.25], [197.0, 1515.8461538461538], [196.0, 1830.142857142857], [195.0, 2230.0], [194.0, 2058.0], [193.0, 1850.6], [192.0, 1654.0], [198.0, 1512.7500000000002], [207.0, 2863.0], [205.0, 1847.875], [204.0, 1739.0], [203.0, 1441.1666666666667], [202.0, 2948.0], [201.0, 1771.25], [200.0, 2251.75], [215.0, 2397.0], [214.0, 530.0], [213.0, 1403.0], [212.0, 2400.0], [211.0, 3182.0], [210.0, 2848.0], [209.0, 2327.0], [222.0, 1985.0], [220.0, 2647.3333333333335], [217.0, 2023.5], [231.0, 558.0], [230.0, 4354.0], [228.0, 2421.0], [226.0, 2434.0], [224.0, 2258.5], [234.0, 232.0], [239.0, 577.0], [238.0, 1638.0], [237.0, 2355.0], [236.0, 532.0], [232.0, 1436.0], [242.0, 863.0], [245.0, 1116.6666666666667], [244.0, 2918.0], [243.0, 239.0], [241.0, 2003.0], [240.0, 2333.0], [255.0, 619.0], [253.0, 2238.5], [249.0, 571.5], [269.0, 2587.0], [263.0, 432.0], [271.0, 1740.0], [268.0, 1805.0], [267.0, 580.0], [265.0, 2162.0], [264.0, 604.0], [261.0, 1956.0], [260.0, 1027.6666666666667], [274.0, 269.0], [273.0, 281.0], [272.0, 602.0], [287.0, 2332.0], [285.0, 2646.0], [280.0, 646.0], [279.0, 588.0], [278.0, 651.0], [276.0, 7027.0], [275.0, 1996.0], [300.0, 2800.0], [302.0, 448.0], [299.0, 2258.5], [301.0, 1135.5], [303.0, 1607.5], [296.0, 1325.0], [294.0, 2036.0], [293.0, 2251.0], [295.0, 2244.0], [288.0, 726.0], [291.0, 2521.0], [290.0, 510.0], [317.0, 1102.5], [308.0, 1261.8333333333335], [309.0, 1117.1], [312.0, 1213.6666666666667], [311.0, 817.0], [307.0, 1386.0], [305.0, 2587.0], [304.0, 1947.0], [315.0, 928.0], [318.0, 859.0], [319.0, 1178.0], [310.0, 1709.5], [323.0, 1163.5], [321.0, 1609.0], [320.0, 1467.0], [322.0, 1358.3333333333333], [327.0, 1409.0], [326.0, 2047.0], [324.0, 2129.0], [334.0, 1683.6], [335.0, 2257.0], [331.0, 2404.0], [330.0, 1278.5], [329.0, 2088.0], [328.0, 2136.0], [333.0, 1714.25], [332.0, 2221.5], [350.0, 1506.8], [351.0, 1769.5], [349.0, 1781.9230769230767], [348.0, 1839.25], [347.0, 1261.8], [345.0, 559.0], [344.0, 2759.0], [342.0, 607.0], [336.0, 2906.0], [337.0, 2673.0], [352.0, 1912.1999999999998], [353.0, 2081.0], [356.0, 1758.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[174.59002169197416, 2039.1203904555312]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 6064.0], [3.0, 3908.0], [4.0, 10697.0], [5.0, 16103.5], [6.0, 13344.5], [7.0, 16283.0], [8.0, 2702.0], [9.0, 12846.0], [10.0, 1350.0], [11.0, 3902.5], [12.0, 3321.5], [13.0, 3793.5], [14.0, 7612.5], [15.0, 3115.0], [16.0, 4904.5], [17.0, 7716.0], [18.0, 9829.0], [19.0, 6875.0], [20.0, 6081.0], [21.0, 6764.25], [22.0, 6390.0], [23.0, 8109.0], [24.0, 4576.25], [25.0, 3729.0], [26.0, 16066.0], [27.0, 5928.5], [28.0, 7596.0], [29.0, 13778.0], [30.0, 4285.0], [31.0, 5545.5], [33.0, 7470.0], [32.0, 2677.0], [35.0, 6679.0], [34.0, 9394.0], [37.0, 3275.5], [36.0, 5275.0], [39.0, 2944.0], [38.0, 1702.0], [41.0, 4494.0], [40.0, 3078.0], [43.0, 3363.0], [42.0, 2222.0], [45.0, 2884.25], [44.0, 3268.0], [47.0, 8073.0], [46.0, 7837.5], [49.0, 3873.0], [48.0, 2973.0], [51.0, 7731.5], [50.0, 4850.0], [52.0, 2504.0], [53.0, 2673.0], [55.0, 2848.5], [57.0, 3977.0], [56.0, 6661.8], [59.0, 5951.0], [58.0, 2490.0], [61.0, 2872.0], [60.0, 2924.0], [63.0, 4251.0], [62.0, 4479.0], [66.0, 3192.0], [65.0, 3782.5], [64.0, 2633.5], [67.0, 1576.0], [70.0, 4820.0], [69.0, 2974.25], [68.0, 6155.25], [74.0, 3700.0], [73.0, 1438.0], [72.0, 1607.5], [79.0, 3423.0], [78.0, 5506.0], [77.0, 6428.0], [76.0, 4518.75], [83.0, 3183.5], [82.0, 3470.5], [81.0, 2564.0], [80.0, 6341.0], [87.0, 14130.0], [86.0, 2555.0], [85.0, 6756.0], [84.0, 2796.5], [91.0, 6952.0], [90.0, 3017.0], [89.0, 2183.25], [88.0, 1526.5], [95.0, 4960.25], [94.0, 8638.0], [93.0, 3346.0], [92.0, 1893.0], [98.0, 7193.0], [97.0, 2625.5], [96.0, 3470.0], [99.0, 1414.0], [103.0, 7032.0], [102.0, 2102.3333333333335], [101.0, 4125.5], [100.0, 2601.0], [107.0, 3131.5], [106.0, 4011.5], [105.0, 7798.5], [104.0, 3296.0], [110.0, 2492.0], [109.0, 3644.3333333333335], [108.0, 5189.0], [111.0, 1437.0], [115.0, 2511.5], [114.0, 3260.5], [113.0, 2328.5], [112.0, 2622.6666666666665], [118.0, 3362.0], [117.0, 2465.0], [116.0, 6514.5], [119.0, 1458.0], [123.0, 3505.0], [122.0, 3102.25], [121.0, 6437.0], [120.0, 4766.0], [127.0, 1533.6666666666667], [126.0, 2448.0], [125.0, 2542.8571428571427], [124.0, 1730.0], [135.0, 2021.0], [134.0, 1615.25], [133.0, 1871.5], [132.0, 2307.5], [131.0, 3720.3333333333335], [130.0, 2895.0], [129.0, 2153.0], [128.0, 5781.5], [143.0, 8175.5], [142.0, 5611.5], [141.0, 5729.0], [137.0, 2469.5], [136.0, 1963.5], [138.0, 1134.25], [140.0, 1908.0], [151.0, 2117.0], [150.0, 3959.6666666666665], [149.0, 3572.0], [148.0, 2737.5], [147.0, 2762.5], [146.0, 2227.0], [145.0, 2298.25], [159.0, 3687.0], [158.0, 2605.0], [156.0, 2140.0], [155.0, 5011.5], [157.0, 3321.0], [153.0, 2569.5], [167.0, 1687.7142857142856], [166.0, 2469.2000000000003], [165.0, 2592.375], [164.0, 2406.7272727272725], [163.0, 1856.5], [161.0, 2780.0], [160.0, 4824.5], [162.0, 1694.75], [175.0, 1594.1000000000001], [174.0, 2258.2173913043484], [171.0, 1734.8181818181815], [170.0, 2150.090909090909], [169.0, 2680.75], [168.0, 2353.75], [172.0, 1821.5925925925926], [173.0, 1686.388888888889], [183.0, 2114.75], [182.0, 2725.857142857143], [181.0, 2172.0000000000005], [180.0, 2303.3333333333335], [179.0, 2071.125], [177.0, 2062.142857142857], [176.0, 2460.4], [178.0, 2057.75], [191.0, 2147.6666666666665], [190.0, 2068.0], [189.0, 2565.555555555555], [188.0, 2387.5], [187.0, 1987.3333333333333], [186.0, 2939.666666666667], [185.0, 3082.714285714286], [184.0, 1453.0], [199.0, 1718.5], [197.0, 2692.3846153846152], [196.0, 1711.142857142857], [195.0, 2553.0], [194.0, 2854.5], [193.0, 1997.6], [192.0, 3945.6666666666665], [198.0, 1809.3333333333333], [207.0, 2866.5], [205.0, 2319.2500000000005], [204.0, 4287.333333333333], [203.0, 2759.166666666667], [202.0, 2277.5], [201.0, 2633.0], [200.0, 2495.5], [215.0, 3440.0], [214.0, 10234.0], [213.0, 2646.0], [212.0, 3455.0], [211.0, 4775.0], [210.0, 7034.0], [209.0, 2483.5], [222.0, 2869.3333333333335], [220.0, 4837.666666666667], [217.0, 2394.5], [231.0, 4149.0], [230.0, 2775.0], [228.0, 3801.5], [226.0, 6399.0], [224.0, 4382.0], [234.0, 3935.0], [239.0, 3990.0], [238.0, 3589.5], [237.0, 4116.0], [236.0, 2849.0], [232.0, 2717.0], [242.0, 2763.0], [245.0, 2967.6666666666665], [244.0, 1890.0], [243.0, 1988.0], [241.0, 1441.0], [240.0, 2149.0], [255.0, 6655.0], [253.0, 2689.5], [249.0, 5787.0], [269.0, 1952.0], [263.0, 891.0], [271.0, 3268.5], [268.0, 1614.0], [267.0, 3890.0], [265.0, 3257.0], [264.0, 7017.0], [261.0, 1629.0], [260.0, 7213.0], [274.0, 1063.0], [273.0, 1134.5], [272.0, 2603.0], [287.0, 1496.0], [285.0, 5320.0], [280.0, 2799.0], [279.0, 6049.0], [278.0, 2911.0], [276.0, 2875.0], [275.0, 8100.0], [300.0, 3281.0], [302.0, 987.0], [299.0, 1528.5], [301.0, 2109.5], [303.0, 4097.5], [296.0, 3791.3333333333335], [294.0, 3213.0], [293.0, 6298.5], [295.0, 1931.0], [288.0, 3240.6666666666665], [291.0, 3259.0], [290.0, 8440.0], [317.0, 3296.0], [308.0, 2963.6666666666665], [309.0, 3883.6000000000004], [312.0, 4567.0], [311.0, 3179.0], [307.0, 2965.5], [305.0, 6058.0], [304.0, 4934.0], [315.0, 3197.0], [318.0, 4803.333333333333], [319.0, 3461.090909090909], [310.0, 4903.5], [323.0, 3041.0], [321.0, 4911.0], [320.0, 2695.5714285714284], [322.0, 2550.0], [327.0, 2550.0], [326.0, 5254.0], [324.0, 1762.0], [334.0, 2472.8], [335.0, 4552.0], [331.0, 6509.0], [330.0, 2131.5], [329.0, 1694.0], [328.0, 4464.0], [333.0, 3022.0], [332.0, 1956.5], [350.0, 2766.4], [351.0, 2708.75], [349.0, 2719.846153846154], [348.0, 2501.75], [347.0, 5253.2], [345.0, 2430.0], [344.0, 5093.666666666667], [342.0, 3415.0], [336.0, 2714.0], [337.0, 4401.0], [352.0, 3388.4], [353.0, 4899.0], [356.0, 2714.6666666666665]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[174.59002169197416, 3286.600867678961]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 13760.0], [3.0, 10989.0], [4.0, 11268.0], [5.0, 19078.5], [6.0, 18299.0], [7.0, 16951.0], [8.0, 14658.5], [9.0, 17496.5], [10.0, 15575.0], [11.0, 15904.0], [12.0, 12004.0], [13.0, 13878.5], [14.0, 12696.5], [15.0, 9427.0], [16.0, 10773.0], [17.0, 8738.5], [18.0, 12134.5], [19.0, 10551.0], [20.0, 6846.0], [21.0, 11309.5], [22.0, 18499.0], [23.0, 8679.0], [24.0, 8045.5], [25.0, 8282.5], [26.0, 16831.0], [27.0, 8099.0], [28.0, 8389.5], [29.0, 17632.0], [30.0, 8330.0], [31.0, 8762.0], [33.0, 12098.0], [32.0, 6854.5], [35.0, 8631.0], [34.0, 12232.0], [37.0, 6525.5], [36.0, 7815.0], [39.0, 8804.0], [38.0, 4835.0], [41.0, 7188.5], [40.0, 6307.5], [43.0, 8551.5], [42.0, 11007.0], [45.0, 6015.0], [44.0, 7403.0], [47.0, 15478.0], [46.0, 11687.0], [49.0, 6949.5], [48.0, 6493.666666666667], [51.0, 9722.0], [50.0, 7635.5], [52.0, 11543.5], [53.0, 5334.0], [55.0, 5649.0], [57.0, 5908.0], [56.0, 10098.4], [59.0, 12136.5], [58.0, 6478.0], [61.0, 5459.0], [60.0, 5162.333333333333], [63.0, 7889.0], [62.0, 7332.0], [66.0, 8175.0], [65.0, 10062.5], [64.0, 7062.0], [67.0, 4067.0], [70.0, 6370.5], [69.0, 3368.25], [68.0, 8184.500000000001], [74.0, 6388.8], [73.0, 4187.0], [72.0, 4511.5], [79.0, 6376.0], [78.0, 7426.0], [77.0, 8900.0], [76.0, 8360.0], [83.0, 5607.5], [82.0, 5540.0], [81.0, 4366.0], [80.0, 8898.0], [87.0, 15221.0], [86.0, 4628.5], [85.0, 9070.5], [84.0, 5405.5], [91.0, 7927.0], [90.0, 5957.0], [89.0, 4616.5], [88.0, 4576.5], [95.0, 5986.0], [94.0, 10517.5], [93.0, 6860.0], [92.0, 4670.0], [98.0, 10012.5], [97.0, 4050.5], [96.0, 5443.5], [99.0, 7490.0], [103.0, 10087.0], [102.0, 3484.3333333333335], [101.0, 7524.5], [100.0, 4474.0], [107.0, 4868.0], [106.0, 6938.5], [105.0, 9179.0], [104.0, 5392.0], [110.0, 3787.0], [109.0, 4907.0], [108.0, 10648.0], [111.0, 2553.0], [115.0, 3843.0], [114.0, 4835.5], [113.0, 3655.5], [112.0, 4168.333333333333], [118.0, 4775.5], [117.0, 3882.5], [116.0, 8199.5], [119.0, 2842.0], [123.0, 5226.0], [122.0, 5183.25], [121.0, 10899.0], [120.0, 7106.666666666666], [127.0, 2295.666666666667], [126.0, 4031.3333333333335], [125.0, 4754.714285714285], [124.0, 2396.0], [135.0, 3869.5], [134.0, 2718.75], [133.0, 3038.25], [132.0, 3856.0], [131.0, 5847.333333333333], [130.0, 4391.333333333333], [129.0, 3268.6], [128.0, 7598.5], [143.0, 9808.5], [142.0, 7073.5], [141.0, 8366.4], [137.0, 3953.0], [136.0, 3435.5], [138.0, 1934.0], [140.0, 2999.5], [151.0, 3763.5], [150.0, 6949.666666666667], [149.0, 7722.0], [148.0, 4972.5], [147.0, 4420.0], [146.0, 4202.0], [145.0, 4669.25], [159.0, 5027.0], [158.0, 6235.0], [156.0, 4426.75], [155.0, 7480.0], [157.0, 4294.0], [153.0, 4380.0], [167.0, 2643.0], [166.0, 4447.299999999999], [165.0, 4673.25], [164.0, 4298.181818181818], [163.0, 3614.1666666666665], [161.0, 5984.5], [160.0, 6896.0], [162.0, 3233.5], [175.0, 3506.2], [174.0, 3788.4347826086946], [171.0, 3301.409090909091], [170.0, 3432.1818181818185], [169.0, 4474.625], [168.0, 3905.333333333333], [172.0, 3061.555555555556], [173.0, 2997.4444444444443], [183.0, 4198.0], [182.0, 4543.428571428572], [181.0, 3539.428571428571], [180.0, 3715.0], [179.0, 4102.125], [177.0, 3618.285714285714], [176.0, 4238.4], [178.0, 3321.5], [191.0, 5888.666666666667], [190.0, 3230.5], [189.0, 4140.888888888889], [188.0, 3538.166666666667], [187.0, 3117.1111111111113], [186.0, 4480.166666666667], [185.0, 4646.428571428572], [184.0, 2932.5], [199.0, 3823.25], [197.0, 4208.384615384615], [196.0, 3541.571428571429], [195.0, 4783.333333333333], [194.0, 4912.5], [193.0, 3848.2], [192.0, 5599.666666666667], [198.0, 3322.4166666666665], [207.0, 5729.5], [205.0, 4167.625], [204.0, 6026.333333333333], [203.0, 4200.666666666667], [202.0, 5226.0], [201.0, 4404.25], [200.0, 4747.5], [215.0, 5838.0], [214.0, 10765.0], [213.0, 4049.0], [212.0, 5855.0], [211.0, 7957.0], [210.0, 9882.0], [209.0, 4810.5], [222.0, 4854.333333333333], [220.0, 7485.666666666667], [217.0, 4418.5], [231.0, 4707.0], [230.0, 4173.5], [228.0, 6222.5], [226.0, 8834.0], [225.0, 3584.0], [224.0, 6640.5], [234.0, 4167.0], [239.0, 4567.0], [238.0, 5228.0], [237.0, 6472.0], [236.0, 3360.3333333333335], [232.0, 4154.0], [242.0, 3626.0], [245.0, 4084.666666666667], [247.0, 1124.0], [246.0, 9756.0], [244.0, 4808.0], [243.0, 2228.0], [241.0, 3444.0], [240.0, 4482.0], [255.0, 5179.5], [253.0, 4674.25], [249.0, 6359.0], [269.0, 4540.0], [263.0, 1284.0], [271.0, 5009.0], [268.0, 3419.0], [267.0, 2880.0], [265.0, 5419.0], [264.0, 7622.0], [262.0, 1210.0], [261.0, 3585.0], [260.0, 5473.0], [274.0, 1332.0], [273.0, 1415.5], [272.0, 3205.0], [287.0, 3828.0], [285.0, 7966.0], [275.0, 4227.0], [283.0, 7653.0], [280.0, 3445.0], [279.0, 6638.0], [278.0, 3562.0], [277.0, 1641.0], [276.0, 9902.0], [302.0, 917.5], [299.0, 3788.0], [301.0, 3245.5], [303.0, 5705.0], [300.0, 5767.333333333333], [297.0, 1229.5], [296.0, 5117.0], [294.0, 5249.0], [295.0, 5196.333333333333], [289.0, 493.0], [288.0, 3578.333333333333], [291.0, 3346.666666666667], [290.0, 8950.0], [293.0, 8550.0], [292.0, 2195.0], [317.0, 4398.75], [308.0, 4226.0], [309.0, 4647.0], [312.0, 4618.25], [311.0, 2558.0], [307.0, 4352.5], [305.0, 4990.0], [304.0, 4048.0], [310.0, 6613.5], [315.0, 2770.5], [318.0, 6479.75], [319.0, 4353.25], [314.0, 8682.0], [313.0, 4914.5], [323.0, 3238.0], [321.0, 6521.0], [320.0, 4163.142857142858], [322.0, 3265.0], [327.0, 4437.666666666667], [326.0, 4735.0], [325.0, 7142.0], [324.0, 3891.0], [334.0, 3918.166666666667], [335.0, 5260.0], [331.0, 5205.0], [330.0, 3410.5], [329.0, 3782.0], [328.0, 4356.0], [333.0, 4271.8], [332.0, 4179.0], [350.0, 4377.875], [351.0, 4478.25], [349.0, 4502.230769230769], [348.0, 5505.285714285714], [347.0, 6515.4], [345.0, 6434.666666666667], [344.0, 4402.5], [342.0, 2325.0], [336.0, 5620.0], [337.0, 7075.0], [352.0, 4716.615384615385], [353.0, 6980.333333333333], [356.0, 4472.666666666667], [1.0, 17411.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[183.14759036144576, 5244.757028112452]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 356.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.70568318E12, "maxY": 610908.2, "series": [{"data": [[1.70568342E12, 610908.2], [1.70568318E12, 459804.06666666665], [1.70568348E12, 34.93333333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70568342E12, 4287.166666666667], [1.70568318E12, 3790.633333333333], [1.70568348E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70568348E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1691.2044088176349, "minX": 1.70568318E12, "maxY": 17411.0, "series": [{"data": [[1.70568342E12, 1691.2044088176349], [1.70568318E12, 2449.546099290781]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70568342E12, 2189.5871743486964], [1.70568318E12, 4580.713947990543]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70568342E12, 3880.8076152304625], [1.70568318E12, 6592.42741935484], [1.70568348E12, 17411.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70568348E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70568318E12, "maxY": 4573.775413711582, "series": [{"data": [[1.70568342E12, 1023.4549098196392], [1.70568318E12, 1778.5531914893631]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70568342E12, 2169.689378757513], [1.70568318E12, 4573.775413711582]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70568342E12, 2169.689378757513], [1.70568318E12, 4367.258064516127], [1.70568348E12, 0.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70568348E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70568318E12, "maxY": 17410.0, "series": [{"data": [[1.70568342E12, 0.0], [1.70568318E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70568342E12, 1086.1743486973942], [1.70568318E12, 2490.555555555555]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70568342E12, 1086.1743486973942], [1.70568318E12, 2635.3749999999973], [1.70568348E12, 17410.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70568348E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 188.0, "minX": 1.70568318E12, "maxY": 26366.0, "series": [{"data": [[1.70568342E12, 13891.0], [1.70568318E12, 26366.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70568342E12, 188.0], [1.70568318E12, 196.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70568342E12, 4992.200000000001], [1.70568318E12, 9277.400000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70568342E12, 9358.239999999985], [1.70568318E12, 18001.599999999977]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70568342E12, 2071.0], [1.70568318E12, 3668.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70568342E12, 6607.600000000002], [1.70568318E12, 12256.199999999997]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70568342E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 684.5, "minX": 1.0, "maxY": 25495.0, "series": [{"data": [[2.0, 10326.0], [37.0, 2266.0], [47.0, 3648.0], [3.0, 25495.0], [53.0, 6371.0], [52.0, 7520.0], [55.0, 4569.0], [56.0, 5597.5], [58.0, 4987.5], [63.0, 2085.0], [62.0, 1596.5], [4.0, 11128.5], [5.0, 3527.0], [80.0, 2683.5], [84.0, 2643.5], [97.0, 3498.0], [6.0, 13441.0], [105.0, 3734.0], [104.0, 3868.0], [109.0, 1584.0], [123.0, 2795.0], [127.0, 1544.0], [143.0, 1633.0], [142.0, 1903.5], [149.0, 2281.0], [150.0, 1774.0], [10.0, 684.5], [167.0, 2289.0], [187.0, 3875.0], [212.0, 3385.0], [15.0, 11607.0], [16.0, 8777.0], [30.0, 8382.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 17411.0], [187.0, 1420.5], [47.0, 2277.5], [97.0, 3831.0], [3.0, 21566.0], [212.0, 1587.0], [105.0, 2228.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 212.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 25495.0, "series": [{"data": [[2.0, 4685.0], [37.0, 2265.0], [47.0, 1860.0], [3.0, 25495.0], [53.0, 3294.0], [52.0, 3477.5], [55.0, 1955.0], [56.0, 3356.5], [58.0, 2893.0], [63.0, 1706.5], [62.0, 1586.5], [4.0, 2737.0], [5.0, 2666.0], [80.0, 2508.5], [84.0, 1456.0], [97.0, 2804.0], [6.0, 13067.5], [105.0, 2921.0], [104.0, 3282.5], [109.0, 1429.0], [123.0, 2103.0], [127.0, 1335.0], [143.0, 1281.0], [142.0, 1468.0], [149.0, 1379.0], [150.0, 1423.5], [10.0, 608.0], [167.0, 1429.0], [187.0, 2857.0], [212.0, 2715.5], [15.0, 4361.0], [16.0, 2132.0], [30.0, 3954.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 0.0], [187.0, 1420.5], [47.0, 2275.0], [97.0, 3242.0], [3.0, 0.0], [212.0, 1587.0], [105.0, 1988.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 212.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 22.366666666666667, "minX": 1.70568318E12, "maxY": 24.966666666666665, "series": [{"data": [[1.70568342E12, 24.966666666666665], [1.70568318E12, 22.366666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70568342E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.70568318E12, "maxY": 16.6, "series": [{"data": [[1.70568342E12, 16.6], [1.70568318E12, 12.333333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70568342E12, 8.316666666666666], [1.70568318E12, 7.05]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.70568318E12, 2.933333333333333]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.70568342E12, 0.03333333333333333], [1.70568318E12, 0.05], [1.70568348E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70568348E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.70568318E12, "maxY": 8.316666666666666, "series": [{"data": [[1.70568342E12, 8.3], [1.70568318E12, 6.166666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.70568342E12, 0.016666666666666666], [1.70568318E12, 2.1], [1.70568348E12, 0.016666666666666666]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.70568342E12, 8.316666666666666], [1.70568318E12, 7.05]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.70568342E12, 0.016666666666666666], [1.70568318E12, 0.8833333333333333]], "isOverall": false, "label": "HTTP Request-1-failure", "isController": false}, {"data": [[1.70568342E12, 8.3], [1.70568318E12, 6.166666666666667]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70568348E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.70568318E12, "maxY": 24.916666666666668, "series": [{"data": [[1.70568342E12, 24.916666666666668], [1.70568318E12, 19.383333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70568342E12, 0.03333333333333333], [1.70568318E12, 2.9833333333333334], [1.70568348E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70568348E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

